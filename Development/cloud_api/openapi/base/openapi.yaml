openapi: 3.0.0
servers:
  - url: 'http://localhost/api/v1/'
    description: Local Testing Server
  - url: 'http://ioe.thingsroot.com/api/v1/'
    description: Publish Server
info:
  description: 'This is a thingsroot cloud server. '
  version: 1.0.0
  title: ThingsRoot Cloud Base APIs
  termsOfService: 'http://thingsroot.com/terms/'
  contact:
    email: dirk.chang@thingsroot.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: user
    description: Everything about your account
    externalDocs:
      description: Find out more
      url: 'http://thingsroot.com'
  - name: gateways
    description: Everything about your freeioe gateway devices
    externalDocs:
      description: Find out more
      url: 'http://thingsroot.com'
  - name: applications
    description: FreeIOE Application Store
    externalDocs:
     description: Find out more
     url: 'http://freeioe.org'
  - name: configurations
    description: 'Operations about device configuration, application templates'
  - name: companies
    description: 'Operations about device configuration, application templates'
  - name: activities
    description: Platform activities
  - name: events
    description: Device event
  - name: pushers
    description: Cloud Pushers
  - name: store
    description: Cloud Application Store
  - name: developers
    description: Application developer
  - name: xtags
    description: Object tags
paths:
  /user.test:
    get:
      tags:
        - user
      summary: Test api avaiable
      operationId: testUser
      responses:
        '200':
          $ref: '#/components/responses/ApiTestResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /user.create:
    post:
      tags:
        - user
      summary: Create user
      description: For sign up page, when user not logined.
      operationId: createUser
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
        description: Created user object
        required: true
      parameters: []
  /user.login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: Login with pasword
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
            format: password
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error Num
          content:
            application/json:
              schema:
                type: string
                enum:
                  - username_password_not_matched
  /user.logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
      parameters: []
  /user.csrf_token:
    get:
      tags:
        - user
      summary: Get user csrf_token
      operationId: csrfTokenUser
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
      parameters: []
  /user.read:
    get:
      tags:
        - user
      summary: Get user information
      description: Get user information after logined.
      operationId: getUserInfo
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /user.update:
    post:
      tags:
        - user
      summary: Update user information
      description: Update your account information after logined.
      operationId: updateUserInfo
      requestBody:
        required: true
        description: User information object
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address
                phone:
                  type: string
                  format: phone
                  description: Phone number
                first_name:
                  type: string
                  description: First name
                last_name:
                  type: string
                  description: Last name
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum:
                  - no_permission
                  - exception
  /user.update_password:
    post:
      tags:
        - user
      summary: Update user password
      description: Reset user password with reset key or with logged in session
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                logout_all_sessions:
                  type: integer
                  enum:
                    - 0
                    - 1
                key:
                  type: string
                  description: Password reset key
                old_password:
                  type: string
                  description: Old Password (available if no key specified)
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exeception
                  - reset_key_required
                  - reset_key_incorrect 
                  - update_password_failed
      parameters: []
  /user.reset_password:
    post:
      tags:
        - user
      summary: Reset user password
      description: Server will send password reset email to your email box
      operationId: resetPassword
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - guest_not_allowed
                  - not_allowed
                  - user_disabled
                  - user_not_found
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
  /user.token.create:
    post:
      tags:
        - user
      summary: Create user auth token
      operationId: createUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_exists
                  - authorization_code_created
      parameters: []
  /user.token.read:
    get:
      tags:
        - user
      summary: Get user auth token
      description: Get user auth token for access apis in your client instead of cookies
      operationId: getUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_not_exists
      parameters: []
  /user.token.update:
    post:
      tags:
        - user
      summary: Update user auth token
      operationId: updateUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_not_exists
      parameters: []
  /user.token.remove:
    post:
      tags:
        - user
      summary: Remove user auth token
      operationId: removeUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_not_exists
                  - auth_code_removed
      parameters: []
  /user.virtual_gateways.list:
    get:
      tags:
        - user
      summary: List virtual gateway sn
      operationId: listUserGateway
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /user.virtual_gateways.create:
    post:
      tags:
        - user
      summary: Create virtual gateway sn
      operationId: createUserGateway
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - virtual_gateway_created
  /user.virtual_gateways.read:
    get:
      tags:
        - user
      summary: Get virtual gateway information
      operationId: getUserGatewayInfo
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - virtual_gateway_created
                  - has_no_permission
  /{category}.activities.list:
    get:
      tags:
        - activities
      summary: Get activities
      description: Event list contains the event detailed infomration object
      operationId: listActivity
      parameters:
        - name: category
          in: path
          description: Activity category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: Activity category id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Start postion
          required: false
          schema:
            type: int
        - name: limit
          in: query
          description: Limitation Count
          required: false
          schema:
            type: int
        - name: filters
          in: query
          description: Activity Filters
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.activities.count:
    get:
      tags:
        - activities
      summary: Get activities count
      operationId: countActivity
      parameters:
        - name: category
          in: path
          description: Activity category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: Activity category id
          required: true
          schema:
            type: string
        - name: filters
          in: query
          description: Activity filters.
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.activities.read:
    get:
      tags:
        - activities
      summary: Get detailed activity information
      operationId: getActivityInfo
      parameters:
        - name: category
          in: path
          description: Activity category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: Activity id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.activities.dispose:
    post:
      tags:
        - activities
      summary: dispose the activity
      operationId: disposeActivity
      parameters:
        - name: category
          in: path
          description: Activity category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activities:
                  type: list
                disposed:
                  type: integer
                  enum:
                    - 0
                    - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.events.list:
    get:
      tags:
        - events
      summary: Get events
      description: Event list contains the event detailed infomration object
      operationId: listEvent
      parameters:
        - name: category
          in: path
          description: Event category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: Event category id
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: Start postion
          required: false
          schema:
            type: int
        - name: limit
          in: query
          description: Limitation Count
          required: false
          schema:
            type: int
        - name: filters
          in: query
          description: Event Filters
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.events.count:
    get:
      tags:
        - events
      summary: Get events count
      operationId: countEvent
      parameters:
        - name: category
          in: path
          description: Event category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: Event category id
          required: true
          schema:
            type: string
        - name: filters
          in: query
          description: Event Filters
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.events.read:
    get:
      tags:
        - events
      summary: Get event detailed information 
      operationId: getEventInfo
      parameters:
        - name: category
          in: path
          description: Event category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: Event id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.event.dispose:
    post:
      tags:
        - events
      summary: dispose event
      operationId: disposeEvent
      parameters:
        - name: category
          in: path
          description: Event category
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  type: list
                disposed:
                  type: integer
                  enum:
                    - 0
                    - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{object}.tags.list:
    get:
      tags:
        - xtags
      summary: Get object tags 
      operationId: listTags
      parameters:
        - name: object
          in: path
          description: Object type
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: Object id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /{object}.tags.create:
    post:
      tags:
        - xtags
      summary: Create tags for specified object
      operationId: createTags
      parameters:
        - name: object
          in: path
          description: Object type
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: Object ID
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: tags to remove
          required: true
          schema:
            type: array
            items:
              type: string

      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{object}.tags.remove:
    post:
      tags:
        - xtags
      summary: Remove tags from object
      operationId: removeTags
      parameters:
        - name: object
          in: path
          description: Object Type
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: Object ID
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: tags to remove
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{object}.tags.clear:
    post:
      tags:
        - xtags
      summary: Clear all tags from object
      operationId: clearTags
      parameters:
        - name: object
          in: path
          description: Object Type
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: Object ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /gateways.test:
    post:
      tags:
        - gateways
      summary: Check whether the api is available or not
      operationId: apiGatewayTest
      requestBody:
        $ref: '#/components/requestBodies/Gateway'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /gateways.list:
    get:
      tags:
        - gateways
      summary: Get user gateway list
      operationId: listGateway
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.create:
    post:
      tags:
        - gateways
      summary: Add a new gateway device to your gateway list
      operationId: addGateway
      requestBody:
        $ref: '#/components/requestBodies/GatewayNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.update:
    post:
      tags:
        - gateways
      summary: Update gateway device information
      operationId: updateGateway
      requestBody:
        $ref: '#/components/requestBodies/Gateway'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.read:
    get:
      tags:
        - gateways
      summary: Query gateway infomration
      operationId: queryGateway
      parameters:
        - name: name
          in: query
          description: Gateway ID ( serial number )
          required: true
          schema:
            type: string
            default: xxxxxxxxxx
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.remove:
    post:
      tags:
        - gateways
      summary: Remove gateway from your gateway list
      operationId: removeGateway
      parameters:
        - name: name
          in: query
          description: Gateway ID ( serial number )
          required: true
          explode: true
          schema:
            type: string
            default: xxxxxxxxxx
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.exec_result:
    get:
      tags:
        - gateways
      summary: Get gateway operation execution result
      operationId: getGatewayDeviceExecutionResult
      parameters:
        - name: id
          in: query
          description: Execution ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.upgrade:
    post:
      tags:
        - gateways
      summary: Upgrade gateway freeioe version
      operationId: upgradeGatwaySoftware
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: FreeIOE Version
          required: true
          schema:
            type: integer
        - name: skynet_version
          in: query
          description: Skynet Version
          required: true
          schema:
            type: integer
        - name: no_ack
          in: query
          description: Need fire ACK Mannually
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 0
              - 1
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.upgrade_ack:
    post:
      tags:
        - gateways
      summary: Upgrade gateway freeioe version acknowledgment
      operationId: upgradeGatwaySoftwareAck
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_data:
    post:
      tags:
        - gateways
      summary: Enable device data upload to ThingsCloud.
      operationId: enableGatewayDataUpload
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: enable
          in: query
          description: Enable or NOT
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 0
              - 1
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_data_one_short:
    post:
      tags:
        - gateways
      summary: Enable device data upload in a duration time to ThingsCloud.
      operationId: enableGatewayDataUploadOnShort
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: duration
          in: query
          description: duration time in seconds
          required: true
          schema:
            type: integer
            default: 60
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.data_snapshot:
    post:
      tags:
        - gateways
      summary: Ask for one data snapshot from gateway to ThingsCloud.
      operationId: fireGatewayDataSnapshot
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.data_flush:
    post:
      tags:
        - gateways
      summary: Flush buffered data from gateway to ThingsCloud.
      operationId: flushGatewayData
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_log:
    post:
      tags:
        - gateways
      summary: Enable log update to ThingsCloud.
      operationId: enableGatewayLogUpload
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: duration
          in: query
          description: duration time in seconds
          required: true
          schema:
            type: integer
            default: 60
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_comm:
    post:
      tags:
        - gateways
      summary: Enable dump communication stream to ThingsCloud.
      operationId: enableGatewayCommUpload
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: duration
          in: query
          description: duration time in seconds
          required: true
          schema:
            type: integer
            default: 60
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_stat:
    post:
      tags:
        - gateways
      summary: Enable statistics data update to ThingsCloud.
      operationId: enableGatewayStatUpload
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: enable
          in: query
          description: Enable or NOT
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 0
              - 1
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_event:
    post:
      tags:
        - gateways
      summary: Set the minmum event upload level
      operationId: enableGatewayEventUpload
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: min_level
          in: query
          description: Minmum event upload level (minus number to disable event upload)
          required: true
          schema:
            type: integer
            default: 1
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.run_batch_script:
    post:
      tags:
        - gateways
      summary: Run batch task script
      operationId: gatewayRunBatchScript
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: script
          in: query
          description: Batch Script
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.restart:
    post:
      tags:
        - gateways
      summary: Restart FreeIOE
      operationId: restartGatewayFreeIOE
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.reboot:
    post:
      tags:
        - gateways
      summary: Reboot Gateway Device
      operationId: rebootGatewayHardware
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.cloud_conf:
    post:
      tags:
        - gateways
      summary: Update gateway cloud settings
      operationId: updateCloudConfGateway
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: data
          in: query
          description: 'Configuration Data (Change IOT Device Cloud Settings, data example: {"ID": "IDIDIDIDIDID", "HOST": "ioe.symgrid.com", ...} Valid keys: ID/CLOUD_ID/HOST/PORT/TIMEOUT/PKG_HOST_URL/CNF_HOST_URL/DATA_UPLOAD/DATA_UPLOAD_PERIOD/COV/COV_TTL)'
          required: true
          schema:
            type: object
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.download_cfg:
    post:
      tags:
        - gateways
      summary: N/A
      operationId: downoadGatewayConfigurations
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: cfg_name
          in: query
          description: Configuration Key
          required: true
          schema:
            type: string
        - name: host
          in: query
          description: Configuration Server Host name
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.upload_cfg:
    post:
      tags:
        - gateways
      summary: N/A
      operationId: uploadGatewayConfigurations
      parameters:
        - name: name
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: host
          in: query
          description: Configuration Server Host name
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.list:
    get:
      tags:
        - gateways
      summary: Get application list
      operationId: listGatewayApplication
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.refresh:
    post:
      tags:
        - gateways
      summary: Refresh application list
      operationId: refreshGatewayApplication
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Execution ID for tracking result
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.install:
    post:
      tags:
        - gateways
      summary: Install application to gateway
      operationId: installGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                app:
                  type: string
                  description: Application ID in store
                version:
                  type: integer
                  description: Application version in store
                conf:
                  type: object
                  description: Application Configuration object
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.remove:
    post:
      tags:
        - gateways
      summary: Remove gateway application
      operationId: removeGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.conf:
    post:
      tags:
        - gateways
      summary: Set configuration for application
      operationId: setGatewayApplicationConf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                conf:
                  type: object
                  description: Application Configuration object
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.start:
    post:
      tags:
        - gateways
      summary: Trigger application start to run
      operationId: startGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                int:
                  type: string
                  description: Application instance ID
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.stop:
    post:
      tags:
        - gateways
      summary: Trigger application stop from running
      operationId: stopGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                reason:
                  type: string
                  description: Stop reason
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.restart:
    post:
      tags:
        - gateways
      summary: Trigger application restart
      operationId: restartGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                reason:
                  type: string
                  description: Stop reason
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.upgrade:
    post:
      tags:
        - gateways
      summary: Upgrade the install application in gateway
      operationId: upgradeGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                app:
                  type: string
                  description: Application ID in store
                version:
                  type: integer
                  description: Application version in store
                conf:
                  type: object
                  description: Application Configuration object
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.query_log:
    post:
      tags:
        - gateways
      summary: Query buffered application log and upload to cloud
      operationId: queryGatwayApplicationLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.query_comm:
    post:
      tags:
        - gateways
      summary: Query buffered application communication stream data and upload to cloud
      operationId: queryGatwayApplicationComm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.upload_comm:
    post:
      tags:
        - gateways
      summary: Upload application communication stream data to cloud
      operationId: uploadGatwayApplicationComm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                sec:
                  type: string
                  description: Duration in seconds
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.option:
    post:
      tags:
        - gateways
      summary: Update application option/setings
      operationId: optionatwayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                option:
                  type: string
                  description: Option key. e.g 'auto'
                  default: auto
                value:
                  type: string
                  description: Option Value
                  default: 1
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.rename:
    post:
      tags:
        - gateways
      summary: Update application option/setings
      operationId: optionatwayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                inst:
                  type: string
                  description: Application instance ID
                new_name:
                  type: string
                  description: New application instance ID
                id:
                  type: string
                  description: Execution ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.beta.read:
    get:
      tags:
        - gateways
      summary: Get beta mode information
      operationId: getGatewayBetaInfo
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.beta.enable:
    post:
      tags:
        - gateways
      summary: Enable beta mode
      operationId: enableBetaMode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                beta:
                  description: Enable beta or not
                  required: true
                  type: integer
                  default: 1
                  enum:
                    - 0
                    - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.list:
    get:
      tags:
        - gateways
      summary: Get devices objects in specified gateway
      operationId: listGatewayDevices
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.read:
    get:
      tags:
        - gateways
      summary: Get devices object detail information
      operationId: listGatewayDevices
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Device ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.data:
    get:
      tags:
        - gateways
      summary: Get devices object input data information
      operationId: listGatewayDeviceInputs
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Device ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.data_query:
    post:
      tags:
        - gateways
      summary: Query device data snapshot to cloud (only once)
      operationId: dataQueryGatewayDevice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                name:
                  type: string
                  description: Device ID
                id:
                  type: string
                  description: Execution ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.output:
    post:
      tags:
        - gateways
      summary: Set output prop value for sepecified device
      operationId: outputGatewayDeviceProp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                name:
                  type: string
                  description: Device ID
                output:
                  type: string
                  description: Device output ID
                prop:
                  type: string
                  description: Device output property ID
                value:
                  type: any
                  description: Output value
                id:
                  type: string
                  description: Execution ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.command:
    post:
      tags:
        - gateways
      summary: Send command for sepecified device
      operationId: commandGatewayDeviceProp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                name:
                  type: string
                  description: Device ID
                command:
                  type: string
                  description: Device command ID
                param:
                  type: any
                  description: Command parameters
                id:
                  type: string
                  description: Execution ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.extensions.list:
    get:
      tags:
        - gateways
      summary: List all installed extension from gateway
      operationId: listGatewayInstalledExts
      parameters:
        - name: gateway
          in: query
          description: Gateway ID
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.extensions.refresh:
    post:
      tags:
        - gateways
      summary: Refresh all installed extension list
      operationId: listGatewayInstalledExts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                id:
                  type: string
                  description: Execution ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.extensions.upgrade:
    post:
      tags:
        - gateways
      summary: Refresh all installed extension list
      operationId: listGatewayInstalledExts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: Gateway ID ( serial number )
                extension:
                  type: string                
                  description: Extension ID
                version:
                  type: string                
                  description: Extension Version
                id:
                  type: string
                  description: Execution ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.test:
    post:
      tags:
        - applications
      summary: Check whether the api is available or not
      operationId: apiApplicationTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /applications.list:
    get:
      tags:
        - applications
      summary: Get user application list
      operationId: listApplications
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.create:
    post:
      tags:
        - applications
      summary: Create new application
      operationId: createApplication
      requestBody:
        $ref: '#/components/requestBodies/ApplicationNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.icon:
    post:
      tags:
        - applications
      summary: Update application icon image file
      operationId: updateApplicationIcon
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: Application ICON file
                name:
                  type: string
                  description: Application ID
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.update:
    post:
      tags:
        - applications
      summary: Update application information
      operationId: updateApplicationInfo
      requestBody:
        $ref: '#/components/requestBodies/Application'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.read:
    get:
      tags:
        - applications
      summary: Query applications infomration
      operationId: queryApplicationInfo
      parameters:
        - name: name
          in: query
          description: Application ID
          required: true
          schema:
            type: string
            default: APP00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.remove:
    post:
      tags:
        - applications
      summary: Remove application
      operationId: removeApplication
      parameters:
        - name: name
          in: query
          description: Applicaton ID
          required: true
          explode: true
          schema:
            type: string
            default: APP00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.test:
    post:
      tags:
        - applications
      summary: Check whether the api is available or not
      operationId: apiApplicationVersionTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /applications.versions.list:
    get:
      tags:
        - applications
      summary: Get application version list
      operationId: listApplicationVersions
      parameters:
        - name: app
          in: query
          description: Applicaton ID
          schema:
            type: string
            default: APP00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.create:
    post:
      tags:
        - applications
      summary: Create new application version
      operationId: createApplicationVresion
      requestBody:
        $ref: '#/components/requestBodies/ApplicationVersionNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.read:
    get:
      tags:
        - applications
      summary: Query application version infomration
      operationId: queryApplicationVersionInfo
      parameters:
        - name: name
          in: query
          description: Application Version ID
          required: true
          schema:
            type: string
            default: APP00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.remove:
    post:
      tags:
        - applications
      summary: Remove application version
      operationId: removeApplicationVersion
      parameters:
        - name: name
          in: query
          description: Applicaton Version ID
          required: true
          explode: true
          schema:
            type: string
            default: APP00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.latest:
    get:
      tags:
        - applications
      summary: Get application latest version
      operationId: getApplicationVersionLatest
      parameters:
        - name: app
          in: query
          description: Applicaton ID
          required: true
          schema:
            type: string
            default: APP00000001
        - name: beta
          in: query
          description: Beta Version included or not
          required: true
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.forks.create:
    get:
      tags:
        - applications
      summary: Create application fork
      operationId: createApplicationFork
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string                
                  description: Application ID 
                version:
                  type: int
                  description: Application version number to fork
                pre_conf:
                  type: string                
                  description: Application pre-configuration 
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.forks.list:
    get:
      tags:
        - applications
      summary: Get application forks
      operationId: getApplicationForksList
      parameters:
        - name: name
          in: query
          description: Applicaton ID
          required: true
          schema:
            type: string
            default: APP00000001
        - name: version
          in: query
          description: The fork version filter
          required: false
          schema:
            type: integer
        - name: owner
          in: query
          description: The user id who forks this application
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.test:
    post:
      tags:
        - configurations
      summary: Check whether the api is available or not
      operationId: apiConfigurationTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /configurations.list:
    get:
      tags:
        - configurations
      summary: Get user configuration list
      operationId: listConfiguration
      parameters:
        - name: conf_type
          in: query
          description: Configuration Type
          required: false
          schema:
            type: string
            default: Template
            enum:
              - Template
              - Configuration
              - Other
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.create:
    post:
      tags:
        - configurations
      summary: Create new configuration
      operationId: createConfiguration
      requestBody:
        $ref: '#/components/requestBodies/ConfigurationNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.update:
    post:
      tags:
        - configurations
      summary: Update application information
      operationId: updateConfigurationINfo
      requestBody:
        $ref: '#/components/requestBodies/Configuration'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.read:
    get:
      tags:
        - configurations
      summary: Query configuration infomration
      operationId: queryConfigurationInfo
      parameters:
        - name: name
          in: query
          description: Configuration ID
          required: true
          schema:
            type: string
            default: CNF0000000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.remove:
    post:
      tags:
        - configurations
      summary: Remove configurations
      operationId: removeConfiguration
      parameters:
        - name: name
          in: query
          description: Configuration ID
          required: true
          explode: true
          schema:
            type: string
            default: CNF0000000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.test:
    post:
      tags:
        - applications
      summary: Check whether the api is available or not
      operationId: apiConfigurationVersionTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /configurations.versions.list:
    get:
      tags:
        - configurations
      summary: Get configuration version list
      operationId: listConfigurationVersions
      parameters:
        - name: conf
          in: query
          description: Configuration ID
          schema:
            type: string
            default: CNF00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.create:
    post:
      tags:
        - configurations
      summary: Create new configuration version
      operationId: createApplicationVresion
      requestBody:
        $ref: '#/components/requestBodies/ConfigurationVersionNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.read:
    get:
      tags:
        - configurations
      summary: Query configuration version infomration
      operationId: queryConfigurationVersionInfo
      parameters:
        - name: name
          in: query
          description: Configuration Version ID
          required: true
          schema:
            type: string
            default: CNF00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.remove:
    post:
      tags:
        - configurations
      summary: Remove configuration version
      operationId: removeConfigurationVersion
      parameters:
        - name: name
          in: query
          description: Configuration Version ID
          required: true
          explode: true
          schema:
            type: string
            default: CNF00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.latest:
    get:
      tags:
        - configurations
      summary: Get configuration latest version
      operationId: getConfigurationVersionLatest
      parameters:
        - name: app
          in: query
          description: Configuration ID
          required: true
          schema:
            type: string
            default: CNF00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.test:
    post:
      tags:
        - companies
      summary: Check whether the api is available or not
      operationId: apiCompanyTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /companies.list:
    get:
      tags:
        - companies
      summary: Get user company list
      operationId: listCompany
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.create:
    post:
      tags:
        - companies
      summary: Create new company
      operationId: createCompany
      requestBody:
        $ref: '#/components/requestBodies/CompanyNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.update:
    post:
      tags:
        - companies
      summary: Update company information
      operationId: updateCompanyInfo
      requestBody:
        $ref: '#/components/requestBodies/Company'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.read:
    get:
      tags:
        - companies
      summary: Query company infomration
      operationId: queryCompanyInfo
      parameters:
        - name: name
          in: query
          description: Company ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.remove:
    post:
      tags:
        - companies
      summary: Remove company
      operationId: removeCompany
      parameters:
        - name: name
          in: query
          description: Company ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.users.create:
    post:
      tags:
        - companies
      summary: Create new company user
      operationId: createCompanyUser
      requestBody:
        $ref: '#/components/requestBodies/CompanyUser'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.users.read:
    get:
      tags:
        - companies
      summary: Query company user infomration
      operationId: queryCompanyUserInfo
      parameters:
        - name: name
          in: query
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.users.update:
    post:
      tags:
        - companies
      summary: Update company user infomration
      operationId: updateCompanyUserInfo
      requestBody:
        $ref: '#/components/requestBodies/CompanyUserUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.list:
    get:
      tags:
        - companies
      summary: Get company group list
      operationId: listCompanyGroup
      parameters:
        - name: company
          in: query
          description: Company ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.create:
    post:
      tags:
        - companies
      summary: Create new company group
      operationId: createCompanyGroup
      requestBody:
        $ref: '#/components/requestBodies/CompanyGroupNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.update:
    post:
      tags:
        - companies
      summary: Update company group information
      operationId: updateCompanyGroupInfo
      requestBody:
        $ref: '#/components/requestBodies/CompanyGroup'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.read:
    get:
      tags:
        - companies
      summary: Query company group infomration
      operationId: queryCompanyGroupInfo
      parameters:
        - name: name
          in: query
          description: Company Group ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.remove:
    post:
      tags:
        - companies
      summary: Remove company group
      operationId: removeCompanyGroup
      parameters:
        - name: name
          in: query
          description: Company Group ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.add_user:
    post:
      tags:
        - companies
      summary: Add user to company group
      operationId: addCompanyGroupUser
      parameters:
        - name: name
          in: query
          description: Company Group ID
          required: true
          explode: true
          schema:
            type: string
        - name: user
          in: query
          description: User ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.groups.remove_user:
    post:
      tags:
        - companies
      summary: Remove company group
      operationId: removeCompanyGroupUser
      parameters:
        - name: name
          in: query
          description: Company Group ID
          required: true
          explode: true
          schema:
            type: string
        - name: user
          in: query
          description: User ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.list:
    get:
      tags:
        - companies
      summary: Get company share group list
      operationId: listCompanyShareGroup
      parameters:
        - name: company
          in: query
          description: Company ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.create:
    post:
      tags:
        - companies
      summary: Create new company share group
      operationId: createCompanyShareGroup
      requestBody:
        $ref: '#/components/requestBodies/GatewayShareGroupNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.update:
    post:
      tags:
        - companies
      summary: Update company share group information
      operationId: updateCompanyShareGroupInfo
      requestBody:
        $ref: '#/components/requestBodies/GatewayShareGroup'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.read:
    get:
      tags:
        - companies
      summary: Query company share group infomration
      operationId: queryCompanyShareGroupInfo
      parameters:
        - name: name
          in: query
          description: Company Share Group ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.remove:
    post:
      tags:
        - companies
      summary: Remove company share group
      operationId: removeCompanyShareGroup
      parameters:
        - name: name
          in: query
          description: Company Share Group ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.add_user:
    post:
      tags:
        - companies
      summary: Add user to company group
      operationId: addCompanyShareGroupUser
      parameters:
        - name: name
          in: query
          description: Company Share Group ID
          required: true
          explode: true
          schema:
            type: string
        - name: user
          in: query
          description: User ID
          required: true
          explode: true
          schema:
            type: string
        - name: comment
          in: query
          description: User Comment
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.remove_user:
    post:
      tags:
        - companies
      summary: Add user to company group
      operationId: removeCompanyShareGroupUser
      parameters:
        - name: name
          in: query
          description: Company Share Group ID
          required: true
          explode: true
          schema:
            type: string
        - name: user
          in: query
          description: User ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.add_device:
    post:
      tags:
        - companies
      summary: Add device to company share group
      operationId: addCompanyShareGroupDevice
      parameters:
        - name: name
          in: query
          description: Company Share Group ID
          required: true
          explode: true
          schema:
            type: string
        - name: device
          in: query
          description: Gateway SN
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.sharedgroups.remove_device:
    post:
      tags:
        - companies
      summary: Add user to company group
      operationId: removeCompanyShareGroupDevice
      parameters:
        - name: name
          in: query
          description: Company Share Group ID
          required: true
          explode: true
          schema:
            type: string
        - name: device
          in: query
          description: Gateway SN
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.requisition.test:
    post:
      tags:
        - companies
      summary: Check whether the api is available or not
      operationId: apiCompanyRequisitionTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /companies.requisition.list:
    get:
      tags:
        - companies
      summary: Get user company requisition list
      operationId: listCompanyRequisition
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.requisition.create:
    post:
      tags:
        - companies
      summary: Create new company requisition
      operationId: createCompanyRequisition
      requestBody:
        $ref: '#/components/requestBodies/CompanyRequisitionNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.requisition.update:
    post:
      tags:
        - companies
      summary: Update company requisition information
      operationId: updateCompanyRequisition
      requestBody:
        $ref: '#/components/requestBodies/CompanyRequisition'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.requisition.update_business_licence:
    post:
      tags:
        - companies
      summary: Update company requisition business license file
      operationId: updateCompanyRequisitionLicense
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: Requisition Business license image file
                name:
                  type: string
                  description: Requisition ID
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.requisition.read:
    get:
      tags:
        - companies
      summary: Query company requisition infomration
      operationId: queryCompanyRequisitionInfo
      parameters:
        - name: name
          in: query
          description: Requisition ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.requisition.remove:
    post:
      tags:
        - companies
      summary: Remove company requisition
      operationId: removeCompanyRequisition
      parameters:
        - name: name
          in: query
          description: Requisition ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.test:
    post:
      tags:
        - pushers
      summary: Check whether the api is available or not
      operationId: apiPusherTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /pushers.list:
    get:
      tags:
        - pushers
      summary: Get cloud pusher list
      operationId: listPusher
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.create:
    post:
      tags:
        - pushers
      summary: Create new pusher
      operationId: createPusher
      requestBody:
        $ref: '#/components/requestBodies/PusherNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.update:
    post:
      tags:
        - pushers
      summary: Update pusher information
      operationId: updatePusherInfo
      requestBody:
        $ref: '#/components/requestBodies/Pusher'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.read:
    get:
      tags:
        - pushers
      summary: Query pusher infomration
      operationId: queryPusherInfo
      parameters:
        - name: name
          in: query
          description: Pusher ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.remove:
    post:
      tags:
        - pushers
      summary: Remove pusher
      operationId: removePusher
      parameters:
        - name: name
          in: query
          description: Pusher ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.list:
    get:
      tags:
        - batch_tasks
      summary: Get gateway batch tasks list
      operationId: listBatchTasks
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.create:
    post:
      tags:
        - batch_tasks
      summary: Create batch task
      operationId: createBatchTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_name:
                  type: string                
                  description: Task readable name
                description:
                  type: string
                  description: Task description
                timeout:
                  type: integer
                  description: Task run timeout
                script:
                  type: string
                  description: Task script content
                gateways:
                  type: array
                  description: Gateway ID list
                  items:
                    type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.read:
    get:
      tags:
        - batch_tasks
      summary: Get batch task information
      operationId: getBatchTaskInfo
      parameters:
        - name: name
          in: query
          description: Batch Task ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.status:
    post:
      tags:
        - batch_tasks
      summary: Get Batch Task status
      operationId: getBatchTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Batch Task ID
                update:
                  type: boolean
                  description: Trigger task status update if True, or only read the status.
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.list:
    get:
      tags:
        - store
      summary: Get applications
      operationId: getStoreApplicationList
      parameters:
        - name: owner
          in: query
          description: Application Owner ID    
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.read:
    get:
      tags:
        - store
      summary: Get application information
      operationId: getStoreApplicationInfo
      parameters:
        - name: name
          in: query
          description: Application ID    
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.configurations.list:
    get:
      tags:
        - store
      summary: Get store configuration list
      operationId: listStoreConfiguration
      parameters:
        - name: app
          in: query
          description: Applicaton ID
          required: false
          schema:
            type: string
            default: APP00000001
        - name: conf_type
          in: query
          description: Configuration Type
          required: false
          schema:
            type: string
            default: Template
            enum:
              - Template
              - Configuration
              - Other
        - name: owner
          in: query
          description: Configuration owner
          required: false
          schema:
            type: string
            default: xxx@xx.com
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.configurations.read:
    get:
      tags:
        - store
      summary: Get configruation information
      operationId: getStoreConfigurationInfo
      parameters:
        - name: name
          in: query
          description: Configuration ID    
          required: true
          schema:
            type: string
            default: CNF00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.{operation}.list:
    get:
      tags:
        - store
      summary: Get store operation object list 
      operationId: listStoreOperationObjects
      parameters:
        - name: operation
          in: path
          description: Operation type
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
        - name: app
          in: query
          description: Application ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.create:
    post:
      tags:
        - store
      summary: Create store {operation} object
      operationId: createStoreOperationObject
      parameters:
        - name: operation
          in: path
          description: Operation type
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                app:
                  type: string                
                  description: Application id
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.read:
    get:
      tags:
        - store
      summary: Get store {operation} object information
      operationId: getStoreOperationObjectInformation
      parameters:
        - name: operation
          in: path
          description: Operation type
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
        - name: name
          in: query
          description: Operation Object ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.update:
    post:
      tags:
        - store
      summary: Update store operation object information
      operationId: updateStoreOperationObjectInformation
      parameters:
        - name: operation
          in: path
          description: Operation type
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string                
                  description: Operation Object id
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.remove:
    post:
      tags:
        - store
      summary: Remove store {operation} object
      operationId: removeStoreOperationObject
      parameters:
        - name: operation
          in: path
          description: Operation type
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
        - name: name
          in: query
          description: Operation Object ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /developers.list:
    get:
      tags:
        - developers
      summary: Get application developer list
      operationId: listDeveloper
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /developers.create:
    post:
      tags:
        - developers
      summary: Create new developer
      operationId: createDeveloper
      requestBody:
        $ref: '#/components/requestBodies/AppDeveloperNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /developers.update:
    post:
      tags:
        - developers
      summary: Update developer information
      operationId: updateDeveloperInfo
      requestBody:
        $ref: '#/components/requestBodies/AppDeveloper'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /developers.read:
    get:
      tags:
        - developers
      summary: Query developer infomration
      operationId: queryDeveloperInfo
      parameters:
        - name: name
          in: query
          description: Developer ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
externalDocs:
  description: See ThingsRoot API example
  url: 'https://thingsroot.com/api/example.html'
components:
  schemas:
    ApiResponseOK:
      type: object
      properties:
        ok:
          type: boolean
        info:
          type: string
        data:
          type: any
    ApiResponseOK_Warning:
      type: object
      properties:
        ok:
          type: boolean
        warning:
          type: string
        data:
          type: any
    ApiResponseOK_Warnings:
      type: object
      properties:
        ok:
          type: boolean
        error:
          type: string
        warning:
          type: array
          items:
              type: string
        data:
          type: object
    ApiResponseOK_Error:
      type: object
      properties:
        ok:
          type: boolean
        error:
          type: string
        exception:
          type: string
    ApiResponse:
      oneOf:
        - $ref: '#/components/schemas/ApiResponseOK'
        - $ref: '#/components/schemas/ApiResponseOK_Warning'
        - $ref: '#/components/schemas/ApiResponseOK_Warnings'
        - $ref: '#/components/schemas/ApiResponseOK_Error'
    ApiTestResponse:
      type: object
      properties:
        ok:
          type: boolean
        data:
          type: string
        source:
          type: string
    ApiExceptionResponse:
      type: object
      properties:
        exc:
          type: string
    CompanyNew:
      type: object
      properties:
        comp_name:
          type: string
          description: company short name
        full_name:
          type: string
          description: Company full name
        domain:
          type: domain
          description: Company domain
        admin:
          type: email
          description: Admin user id
        address:
          type: string
          description: Company address infomration
        contact:
          type: string
          description: Contact information
    Company:
      type: object
      properties:
        name:
          type: string
          description: Company id, the company short name
        comp_name:
          type: string
          description: company short name
        full_name:
          type: string
          description: Company full name
        domain:
          type: domain
          description: Company domain
        admin:
          type: email
          description: Admin user id
        address:
          type: string
          description: Company address infomration
        contact:
          type: string
          description: Contact information
    CompanyUser:
      type: object
      properties:
        email:
          type: string
          description: User Email ID
        company:
          type: string
          description: Company ID
        first_name:
          type: string
          description: User first name
        last_name:
          type: domain
          description: User first name
        mobile_no:
          type: email
          description: User Mobile Number
        new_password:
          type: string
          description: User Password
    CompanyUserUpdate:
      type: object
      properties:
        first_name:
          type: string
          description: User first name
        last_name:
          type: domain
          description: User first name
        mobile_no:
          type: email
          description: User Mobile Number
        new_password:
          type: string
          description: User Password
    CompanyGroupUser:
      type: object
      properties:
        user:
          type: string
          description: User ID
        role:
          type: string
          description: Cloud User Role (Admin)
    CompanyGroupNew:
      type: object
      properties:
        comany:
          type: string
          description: Company ID
        group_name:
          type: string
          description: Company group name
        enabled:
          type: integer
          description: Company enable flag.
          enum:
            - 0
            - 1
        description:
          type: string
          description: Company group description
        user_list:
          type: array
          description: CompanyGroupUser
    CompanyGroup:
      type: object
      properties:
        name:
          type: string
          description: Company Group ID
        comany:
          type: string
          description: Company ID
        group_name:
          type: string
          description: Company group name
        enabled:
          type: integer
          description: Company enable flag.
          enum:
            - 0
            - 1
        description:
          type: string
          description: Company group description
        user_list:
          type: array
          description: CompanyGroupUser
    CompanyRequisitionNew:
      type: object
      properties:
        comp_name:
          type: string
          description: company short name
        full_name:
          type: string
          description: Company full name
        credit_code:
          type: string
          description: Company Credit Code
        domain:
          type: domain
          description: Company domain
        telephone:
          type: string
          description: Company telephone number
        contact:
          type: string
          description: Contact information
        address:
          type: string
          description: Contact address
        business_license_file:
          type: file
          description: Business License Image File
    CompanyRequisition:
      type: object
      properties:
        name:
          type: string
          description: company requisition object name
        comp_name:
          type: string
          description: company short name
        full_name:
          type: string
          description: Company full name
        credit_code:
          type: string
          description: Company Credit Code
        domain:
          type: domain
          description: Company domain
        admin:
          type: email
          description: Admin user id
        telephone:
          type: string
          description: Company telephone number
        contact:
          type: string
          description: Contact information
        address:
          type: string
          description: Contact address
        business_license:
          type: string
          description: business image file path
    GatewayNew:
      type: object
      properties:
        dev_name:
          type: string
          description: Gateway device name specified by user.
        description:
          type: string
          description: Gateway device description sepcified by user.
        owner_type:
          type: string
          description: Owner type
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: Onwer ID
    Gateway:
      type: object
      properties:
        name:
          type: string
          description: Gateway device id (serial number).
        sn:
          type: string
          description: Gateway device serial number
        device_name:
          type: string
          description: Gateway device name specified by user.
        description:
          type: string
          description: Gateway device description sepcified by user.
        enabled:
          type: integer
          description: Gateway device enabled for not (0 is not)
          enum:
            - 0
            - 1
        company:
          type: string
          description: Gateway device owner company name(id)
        owner_type:
          type: string
          description: Gateway device owner type
          enum:
            - User
            - Cloud Company Group
        owner_id:
          type: string
          description: Gateway device owner id
        longitude:
          type: string
        latitude:
          type: string
        device_status:
          type: string
          description: Gateway device online status
          enum:
            - ONLINE
            - OFFLINE
        last_updated:
          type: string
          format: date-time
          description: Last device updated time.
        use_beta:
          type: integer
          description: Has device enabled beta mode or not
        use_beta_start_time:
          type: string
          format: date-time
          description: The beta mold enable time
    UserSignup:
      type: object
      properties:
        email:
          type: email
          description: User email
        full_name:
          type: string
          description: User fullname
    User:
      type: object
      properties:
        name:
          type: string
          description: Username
        csrf_token:
          type: string
          description: CSRF Token
        groups:
          type: array
          description: Company Groups ID list
        companies:
          type: array
          description: Company ID list
        email:
          type: string
          format: email
          description: email address
        password:
          type: string
          description: password
        phone:
          type: string
          description: phone number
        first_name:
          type: string
          description: first name
        last_name:
          type: string
          description: last name
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: tag id
        name:
          type: string
          description: tag name
      xml:
        name: Tag
    ApplicationNew:
      type: object
      properties:
        app_name:
          type: string
          description: Application Name.
        code_name:
          type: string
          description: Application code name for pkg url.
        has_conf_template:
          type: integer
          description: Whether application has configruation template or not
          enum:
            - 0
            - 1
        license_type:
          type: string
          description: Licence type
          enum:
            - Open
            - Private
            - Close
        star:
          type: integer
          description: Application star
        description:
          type: string
          description: Application description
        conf_template:
          type: string
          description: Application configuration template string(in json)
        pre_configuration:
          type: string
          description: Pre application configuration
        keywords:
          type: array
          description: Application keywords
          items:
            type: string
    Application:
      type: object
      properties:
        name:
          type: string
          description: Application ID
        app_name:
          type: string
          description: Application Name.
        code_name:
          type: string
          description: Application code name for pkg url.
        published:
          type: integer
          description: Whether application is an public in store
          enum:
            - 0
            - 1
        has_conf_template:
          type: integer
          description: Whether application has configruation template or not
          enum:
            - 0
            - 1
        license_type:
          type: string
          description: Licence type
          enum:
            - Open
            - Private
            - Close
        star:
          type: integer
          description: Application star
        fork_from:
          type: string
          description: Fork application ID
        fork_version:
          type: integer
          description: Fork version
        description:
          type: string
          description: Application description
        conf_template:
          type: string
          description: Application configuration template string(in json)
        pre_configuration:
          type: string
          description: Pre application configuration
        icon_image:
          type: string
          description: Icon image file url path.
        keywords:
          type: array
          description: Application keywords
          items:
            type: string
        owner:
          type: string
          description: Onwer ID
    ApplicationVersionNew:
      type: object
      properties:
        app:
          type: string
          description: Application ID.
        version:
          type: integer
          description: Version Number
        comment:
          type: string
          description: Version Comment
        app_file:
          type: string
          description: Application Version File (in zip)
    ApplicationVersion:
      type: object
      properties:
        name:
          type: string
          description: Application Version ID.
        app:
          type: string
          description: Application ID.
        version:
          type: integer
          description: Version Number
        comment:
          type: string
          description: Version Comment
        app_name:
          type: string
          description: Application Name
        beta:
          type: integer
          description: Version is beta or not
          enum:
            - 0
            - 1
    ConfigurationNew:
      type: object
      properties:
        app:
          type: string
          description: Application ID.
        conf_name:
          type: string
          description: Configuration name.
        description:
          type: string
          description: Configuration description
        type:
          type: string
          description: Configuration type
          enum:
            - Template
            - Configuration
            - Other
        public:
          type: integer
          enum:
            - 0
            - 1
        keywords:
          type: array
          description: Application keywords
          items:
            type: string
        owner_type:
          type: string
          description: Owner type
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: Onwer ID
    Configuration:
      type: object
      properties:
        name:
          type: string
          description: Configuration ID
        app:
          type: string
          description: Application ID.
        conf_name:
          type: string
          description: Configuration name.
        description:
          type: string
          description: Configuration description
        type:
          type: string
          description: Configuration type
          enum:
            - Template
            - Configuration
            - Other
        public:
          type: integer
          enum:
            - 0
            - 1
        keywords:
          type: array
          description: Application keywords
          items:
            type: string
        owner_type:
          type: string
          description: Owner type
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: Onwer ID
        owner_company:
          type: string
          description: Owner company id
    ConfigurationVersionNew:
      type: object
      properties:
        conf:
          type: string
          description: Configruation ID.
        version:
          type: integer
          description: Version Number
        comment:
          type: string
          description: Version Comment
        data:
          type: string
          description: Configuration Version Content Data
    ConfigurationVersion:
      type: object
      properties:
        name:
          type: string
          description: Configruation Version ID.
        conf:
          type: string
          description: Configruation ID.
        version:
          type: integer
          description: Version Number
        comment:
          type: string
          description: Version Comment
        app_name:
          type: string
          description: Application Name
        app_conf_name:
          type: string
          description: Application Configuration Name
        data:
          type: string
          description: Configuration Version Content Data
    Activity:
      type: object
      properties:
        name:
          type: string
          description: Activity ID
        subject:
          type: string
          description: Activity Subject.
        operation:
          type: string
          description: Activity Operation type
          enum:
            - Owner
            - Status
            - Action
        status:
          type: string
          description: Activity operation result
          enum:
            - Success
            - Failed
        message:
          type: string
          description: Activity detail message object in json.
          items:
            type: string
        disposed:
          type: integer
          description: Activity disposed
          enum:
            - 0
            - 1
        disposed_by:
          type: string
          description: The user who disposed this activity.
        device:
          type: string
          description: Gateway device id.
        user:
          type: string
          description: The user who generates this activity.
        full_name:
          type: string
          description: The user fullname
        owner_type:
          type: string
          description: Owner type
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: Onwer ID
        owner_company:
          type: string
          description: Owner company id
        creation:
          type: date-time
          description: Activtity creation timestamp.
    Event:
      type: object
      properties:
        name:
          type: string
          description: Event ID
        device:
          type: string
          description: Gateway device id.
        event_source:
          type: string
          description: Event source device id.
        event_level:
          type: integer
          description: Event level.
        event_type:
          type: string
          description: Event type
          enum:
            - SYS
            - DEV
            - COMM
            - DATA
            - APP
        event_info:
          type: string
          description: Event information.
          items:
            type: string
        event_data:
          type: string
          description: Event data object in json.
        event_time:
          type: date-time
          description: Event timestamp.
        disposed:
          type: integer
          description: Activity disposed
          enum:
            - 0
            - 1
        disposed_by:
          type: string
          description: The user who disposed this activity.
        owner_type:
          type: string
          description: Owner type
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: Onwer ID
        owner_company:
          type: string
          description: Owner company id
    PusherNew:
      type: object
      properties:
        app_name:
          type: string
          description: Pusher Application Name.
        description:
          type: string
          description: Pusher application description
        uri:
          type: string
          description: HTTP URI which receive the data push
        enabled:
          type: integer
          description: Enable flag.
          enum:
            - 0
            - 1
        on_behalf:
          type: string
          description: On behalf user id.
        device:
          type: integer
          description: Enable this if Pusher application needs device information and any update
          enum:
            - 0
            - 1
        device_event:
          type: integer
          description: Enable this if Pusher application needs device events
          enum:
            - 0
            - 1
        device_data:
          type: integer
          description: Enable this if Pusher application needs device data (by MQTT)
          enum:
            - 0
            - 1
        device_data_mqtt_host:
          type: string
          description: Device data MQTT broker host
        device_data_mqtt_user:
          type: string
          description: Device data MQTT broker login username
        device_data_mqtt_passwd:
          type: string
          description: Device data MQTT broker login password
    Pusher:
      type: object
      properties:
        name:
          type: string
          description: Pusher ID
        app_name:
          type: string
          description: Pusher Application Name.
        description:
          type: string
          description: Pusher application description
        uri:
          type: string
          description: HTTP URI which receive the data push
        enabled:
          type: integer
          description: Enable flag.
          enum:
            - 0
            - 1
        on_behalf:
          type: string
          description: On behalf user id.
        device:
          type: integer
          description: Enable this if Pusher application needs device information and any update
          enum:
            - 0
            - 1
        device_event:
          type: integer
          description: Enable this if Pusher application needs device events
          enum:
            - 0
            - 1
        device_data:
          type: integer
          description: Enable this if Pusher application needs device data (by MQTT)
          enum:
            - 0
            - 1
        device_data_mqtt_host:
          type: string
          description: Device data MQTT broker host
        device_data_mqtt_user:
          type: string
          description: Device data MQTT broker login username
        device_data_mqtt_passwd:
          type: string
          description: Device data MQTT broker login password
    Batch_Task_New:
      type: object
      properties:
        task_name:
          type: string
          description: Batch Task Name.
        timeout:
          type: integer
          description: Batch script run timeout in seconds.
        task_description:
          type: string
          description: Batch task description
        batch_script:
          type: string
          description: Batch task script content.
        device_list:
          type: array
          items:
            $ref: '#/components/schemas/Batch_Task_Device'
    Batch_Task:
      type: object
      properties:
        name:
          type: string
          description: Batch Task ID
        task_name:
          type: string
          description: Batch Task Name.
        timeout:
          type: integer
          description: Batch script run timeout in seconds.
        owner_id:
          type: string
          description: Batch task creator id.
        status:
          type: string
          description: Batch task status.
          enum:
            - New
            - Running
            - Finished
            - Error
            - Partial
        task_description:
          type: string
          description: Batch task description
        batch_script:
          type: string
          description: Batch task script content.
        device_list:
          type: array
          items:
            $ref: '#/components/schemas/Batch_Task_Device'
        creation:
          type: date-time
          description: Task creation timestamp.
    Batch_Task_Device:
      type: object
      properties:
        device:
          type: string
          description: Batch Task Device ID.
        status:
          type: string
          description: Batch task status.
          enum:
            - New
            - Running
            - Finished
            - Error
            - Partial
        info:
          type: string
          description: Task execution result infomration.
        action_id:
          type: string
          description: Task execution id.
        action_starttime:
          type: date-time
          description: Task execution start time.
    StoreAppCommentNew:
      type: object
      properties:
        app:
          type: string
          description: Application ID.
        comment:
          type: string
          description: Comment message.
        reply_to:
          type: string
          description: Comment reply to.
        creation:
          type: date-time
          description: Comment creation timestamp.
    StoreAppComment:
      type: object
      properties:
        name:
          type: string
          description: Comment ID.
        app:
          type: string
          description: Application ID.
        comment:
          type: string
          description: Comment message.
        reply_to:
          type: string
          description: Comment reply to.
        creation:
          type: date-time
          description: Comment creation timestamp.
    StoreAppReviewNew:
      type: object
      properties:
        app:
          type: string
          description: Application ID.
        title:
          type: string
          description: Review title.
        star:
          type: integer
          description: Review star.
        content:
          type: string
          description: Review content.
        comments:
          type: array
          description: Review Comment.
    StoreAppReview:
      type: object
      properties:
        name:
          type: string
          description: Comment ID.
        app:
          type: string
          description: Application ID.
        title:
          type: string
          description: Review title.
        star:
          type: integer
          description: Review star.
        content:
          type: string
          description: Review content.
        comments:
          type: array
          description: Review Comment.
        creation:
          type: date-time
          description: Comment creation timestamp.
    StoreAppIssueNew:
      type: object
      properties:
        app:
          type: string
          description: Application ID.
        title:
          type: string
          description: Issue title.
        priority:
          type: string
          description: Issue priority.
          enum:
            - Low
            - Middle
            - High
        content:
          type: string
          description: Issue content.
    StoreAppIssue:
      type: object
      properties:
        name:
          type: string
          description: Issue ID.
        app:
          type: string
          description: Application ID.
        title:
          type: string
          description: Issue title.
        status:
          type: string
          description: Issue status.
          enum:
            - Open
            - Closed
            - Invalid
        priority:
          type: string
          description: Issue priority.
          enum:
            - Low
            - Middle
            - High
        content:
          type: string
          description: Issue content.
        comments:
          type: array
          description: Issue Comment.
        creation:
          type: date-time
          description: Comment creation timestamp.
    AppDeveloperNew:
      type: object
      properties:
        nickname:
          type: string
          description: Developer Nickname.
        group:
          type: string
          description: Developer Group.
          enum:
            - Normal
            - Power
            - Admin
        enabled:
          type: integer
          description: Enable flag.
          default: 1
          enum:
            - 0
            - 1
    AppDeveloper:
      type: object
      properties:
        name:
          type: string
          description: Developer user id.
        user:
          type: string
          description: Developer user id.
        nickname:
          type: string
          description: Developer Nickname.
        group:
          type: string
          description: Developer Group.
          enum:
            - Normal
            - Power
            - Admin
        enabled:
          type: integer
          description: Enable flag.
          default: 1
          enum:
            - 0
            - 1
    GatewayShareGroupUser:
      type: object
      properties:
        user:
          type: string
          description: User ID (email)
        comment:
          type: string
          description: User Comment
    GatewayShareGroupDevice:
      type: object
      properties:
        device:
          type: string
          description: Gateway ID (email)
    GatewayShareGroupNew:
      type: object
      properties:
        company:
          type: string
          description: Company ID
        group_name:
          type: string
          description: Device share group name.
        role:
          type: string
          description: Cloud User Role (Admin).
        users:
          type: array
          description: DeviceShareGroupUser.
        devices:
          type: array
          description: DeviceShareGroupDevice.
    GatewayShareGroup:
      type: object
      properties:
        name:
          type: string
          description: Share group id
        company:
          type: string
          description: Company ID
        group_name:
          type: string
          description: Device share group name.
        role:
          type: string
          description: Cloud User Role (Admin).
        users:
          type: array
          description: DeviceShareGroupUser.
        devices:
          type: array
          description: DeviceShareGroupDevice.
  requestBodies:
    UserSignup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSignup'
      description: New user information object
      required: true
    GatewayNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayNew'
      description: New gateway infomation object
      required: true
    Gateway:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Gateway'
      description: Gateway infomation object
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    ApplicationNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationNew'
    Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    ApplicationVersionNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationVersionNew'
    ApplicationVersion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationVersion'
    ConfigurationNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationNew'
    Configuration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Configuration'
    ConfigurationVersionNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationVersionNew'
    ConfigurationVersion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationVersion'
    CompanyNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyNew'
    CompanyUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyUser'
    CompanyUserUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyUserUpdate'
    Company:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Company'
    CompanyGroupNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyGroupNew'
    CompanyGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyGroup'
    CompanyRequisitionNew:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CompanyRequisitionNew'
    CompanyRequisition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyRequisition'
    PusherNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PusherNew'
    Pusher:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pusher'
    AppDeveloperNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppDeveloperNew'
    AppDeveloper:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppDeveloper'
    GatewayShareGroupDevice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayShareGroupDevice'
    GatewayShareGroupUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayShareGroupUser'
    GatewayShareGroupNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayShareGroupNew'
    GatewayShareGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayShareGroup'
  responses:
    ApiResponse:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    ApiTestResponse:
      description: successful operation from test apis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiTestResponse'
    ApiExceptionResponse:
      description: operation exception result repsonse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiExceptionResponse'
  securitySchemes:
    auth_code:
      type: apiKey
      name: AuthorizationCode
      in: header
  links: {}
  callbacks: {}
security:
  - auth_code: []
