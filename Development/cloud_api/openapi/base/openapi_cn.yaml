openapi: 3.0.0
servers:
  - url: 'http://ioe.thingsroot.com/api/v1/'
    description: 公网服务器
  - url: 'http://localhost/api/v1/'
    description: 本地测试服务器
info:
  description: '冬笋云基础服务接口'
  version: 1.0.0
  title: 冬笋云基础服务接口
  termsOfService: 'http://thingsroot.com/terms/'
  contact:
    email: dirk.chang@thingsroot.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: user
    description: 用户账户以及相关信息
    externalDocs:
      description: Find out more
      url: 'http://thingsroot.com'
  - name: gateways
    description: FreeIOE网关管理接口
    externalDocs:
      description: Find out more
      url: 'http://thingsroot.com'
  - name: applications
    description: FreeIOE应用管理接口
    externalDocs:
     description: Find out more
     url: 'http://freeioe.org'
  - name: configurations
    description: '配置（设备配置以及设备模板）管理接口'
  - name: companies
    description: '公司组织管理接口'
  - name: activities
    description: 平台事件接口
  - name: events
    description: 设备事件接口
  - name: pushers
    description: 云数据发布接口
  - name: store
    description: 应用市场接口
  - name: xtags
    description: 标签管理接口
paths:
  /user.test:
    get:
      tags:
        - user
      summary: 接口测试
      operationId: testUser
      responses:
        '200':
          $ref: '#/components/responses/ApiTestResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /user.create:
    post:
      tags:
        - user
      summary: 创建用户
      description: 用户创建新用户.
      operationId: createUser
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
        description: 用户注册信息
        required: true
      parameters: []
  /user.login:
    post:
      tags:
        - user
      summary: 用户登录
      description: 用户使用用户名密码进行登录
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: 用户名(邮箱ID)
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 密码
          required: true
          schema:
            type: string
            format: password
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error Num
          content:
            application/json:
              schema:
                type: string
                enum:
                  - username_password_not_matched
  /user.logout:
    post:
      tags:
        - user
      summary: 注销当前登入用户
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
      parameters: []
  /user.csrf_token:
    get:
      tags:
        - user
      summary: 获取 csrf_token
      operationId: csrfTokenUser
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
      parameters: []
  /user.read:
    get:
      tags:
        - user
      summary: 获取用户信息
      description: 用户登录后显示的用户信息.
      operationId: getUserInfo
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /user.update:
    post:
      tags:
        - user
      summary: 更新信息
      description: 更新个人账户的个人信息.
      operationId: updateUserInfo
      requestBody:
        required: true
        description: User information object
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 邮件地址（此字段只用户鉴定用户ID,不可更改）
                phone:
                  type: string
                  format: phone
                  description: 电话号码
                first_name:
                  type: string
                  description: 名字
                last_name:
                  type: string
                  description: 姓氏
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum:
                  - no_permission
                  - exception
  /user.update_password:
    post:
      tags:
        - user
      summary: 更新密码
      description: 在用户登入后，或使用密码重设密钥，进行用户密码更新操作
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                logout_all_sessions:
                  type: integer
                  enum:
                    - 0
                    - 1
                key:
                  type: string
                  description: 密码重设密钥
                old_password:
                  type: string
                  description: 旧密码（当不使用重设密钥时必填)
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exeception
                  - reset_key_required
                  - reset_key_incorrect 
                  - update_password_failed
      parameters: []
  /user.reset_password:
    post:
      tags:
        - user
      summary: 获取密码重置密钥
      description: 服务器会发送重置密钥到用户邮箱
      operationId: resetPassword
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - guest_not_allowed
                  - not_allowed
                  - user_disabled
                  - user_not_found
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
  /user.token.create:
    post:
      tags:
        - user
      summary: 创建用户授权认证ID
      operationId: createUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_exists
                  - authorization_code_created
      parameters: []
  /user.token.read:
    get:
      tags:
        - user
      summary: 获取用户授权认证ID
      description: 获取用户授权认证ID，用以非登录模式API鉴权。
      operationId: getUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_not_exists
      parameters: []
  /user.token.update:
    post:
      tags:
        - user
      summary: 更换授权认证ID
      operationId: updateUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_not_exists
      parameters: []
  /user.token.remove:
    post:
      tags:
        - user
      summary: 清楚授权认证ID
      operationId: removeUserToken
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - authorization_code_not_exists
                  - auth_code_removed
      parameters: []
  /user.virtual_gateways.list:
    get:
      tags:
        - user
      summary: 获取虚拟网关ID列表
      operationId: listUserGateway
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /user.virtual_gateways.create:
    post:
      tags:
        - user
      summary: 创建一个新的虚拟网关ID
      operationId: createUserGateway
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - virtual_gateway_created
  /user.virtual_gateways.read:
    get:
      tags:
        - user
      summary: 获取虚拟网关ID信息
      operationId: getUserGatewayInfo
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - virtual_gateway_created
                  - has_no_permission
  /{category}.activities.list:
    get:
      tags:
        - activities
      summary: 获取平台事件列表
      description: 列表对象包含每个事件的详细信息
      operationId: listActivity
      parameters:
        - name: category
          in: path
          description: 平台事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: 平台事件归属ID
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: 起始位置
          required: false
          schema:
            type: int
        - name: limit
          in: query
          description: 请求数量
          required: false
          schema:
            type: int
        - name: filters
          in: query
          description: 过滤条件
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.activities.count:
    get:
      tags:
        - activities
      summary: 获取平台事件数量
      operationId: countActivity
      parameters:
        - name: category
          in: path
          description: 平台事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: 平台事件归属ID
          required: true
          schema:
            type: string
        - name: filters
          in: query
          description: 过滤条件
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.activities.read:
    get:
      tags:
        - activities
      summary: 获取平台事件详细信息
      operationId: getActivityInfo
      parameters:
        - name: category
          in: path
          description: 平台事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: 平台事件ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.activities.dispose:
    post:
      tags:
        - activities
      summary: 设定已处理标记
      operationId: disposeActivity
      parameters:
        - name: category
          in: path
          description: 平台事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activities:
                  type: list
                disposed:
                  type: integer
                  enum:
                    - 0
                    - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.events.list:
    get:
      tags:
        - events
      summary: 获取设备事件列表
      description: 列表对象包含每个事件的详细信息
      operationId: listEvent
      parameters:
        - name: category
          in: path
          description: 事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: 事件归属ID
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: 起始位置
          required: false
          schema:
            type: int
        - name: limit
          in: query
          description: 请求数量
          required: false
          schema:
            type: int
        - name: filters
          in: query
          description: 过滤条件
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.events.count:
    get:
      tags:
        - events
      summary: 获取设备事件数量
      operationId: countEvent
      parameters:
        - name: category
          in: path
          description: 事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: 事件归属ID
          required: true
          schema:
            type: string
        - name: filters
          in: query
          description: 过滤条件
          required: false
          schema:
            type: object
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.events.read:
    get:
      tags:
        - events
      summary: 或设备时间详细信息
      operationId: getEventInfo
      parameters:
        - name: category
          in: path
          description: 事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
        - name: name
          in: query
          description: 事件ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{category}.event.dispose:
    post:
      tags:
        - events
      summary: 设定已处理标记
      operationId: disposeEvent
      parameters:
        - name: category
          in: path
          description: 事件归属
          required: true
          schema:
            type: string
            enum:
              - user
              - companies
              - gateways
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  type: list
                disposed:
                  type: integer
                  enum:
                    - 0
                    - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{object}.tags.list:
    get:
      tags:
        - xtags
      summary: 获取标签列表
      operationId: listTags
      parameters:
        - name: object
          in: path
          description: 对象类型
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: 对象ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /{object}.tags.create:
    post:
      tags:
        - xtags
      summary: 创建标签
      operationId: createTags
      parameters:
        - name: object
          in: path
          description: 对象类型
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: 对象ID
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 标签列表
          required: true
          schema:
            type: array
            items:
              type: string

      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{object}.tags.remove:
    post:
      tags:
        - xtags
      summary: 删除标签
      operationId: removeTags
      parameters:
        - name: object
          in: path
          description: 对象类型
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: 对象ID
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 标签列表
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /{object}.tags.clear:
    post:
      tags:
        - xtags
      summary: 清楚标签
      operationId: clearTags
      parameters:
        - name: object
          in: path
          description: 对象类型
          required: true
          schema:
            type: string
            enum:
              - gateways
              - applications
              - configurations
        - name: name
          in: query
          description: 对象ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
                  - has_no_permission
  /gateways.test:
    post:
      tags:
        - gateways
      summary: Check whether the api is available or not
      operationId: apiGatewayTest
      requestBody:
        $ref: '#/components/requestBodies/Gateway'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /gateways.list:
    get:
      tags:
        - gateways
      summary: 获取网关列表
      operationId: listGateway
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.create:
    post:
      tags:
        - gateways
      summary: 绑定新网关
      operationId: addGateway
      requestBody:
        $ref: '#/components/requestBodies/GatewayNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.update:
    post:
      tags:
        - gateways
      summary: 更新网关信息
      operationId: updateGateway
      requestBody:
        $ref: '#/components/requestBodies/Gateway'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.read:
    get:
      tags:
        - gateways
      summary: 获取网关信息
      operationId: queryGateway
      parameters:
        - name: name
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
            default: xxxxxxxxxx
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.remove:
    post:
      tags:
        - gateways
      summary: 移除网关
      operationId: removeGateway
      parameters:
        - name: devices
          in: query
          description: 网关ID(序列号)
          required: true
          explode: true
          schema:
            type: string
            default: xxxxxxxxxx
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.exec_result:
    get:
      tags:
        - gateways
      summary: 获取网关操作指令结果
      operationId: getGatewayDeviceExecutionResult
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.upgrade:
    post:
      tags:
        - gateways
      summary: 升级网关软件版本
      operationId: upgradeGatwaySoftware
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: FreeIOE 版本
          required: true
          schema:
            type: integer
        - name: skynet_version
          in: query
          description: Skynet 版本
          required: true
          schema:
            type: integer
        - name: no_ack
          in: query
          description: 是否会进行手工升级确认
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 0
              - 1
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.upgrade_ack:
    post:
      tags:
        - gateways
      summary: Upgrade gateway freeioe version acknowledgment
      operationId: upgradeGatwaySoftwareAck
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_data:
    post:
      tags:
        - gateways
      summary: 开启数据上送(至冬笋云)
      operationId: enableGatewayDataUpload
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: enable
          in: query
          description: 启用或停用
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 0
              - 1
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_data_one_short:
    post:
      tags:
        - gateways
      summary: 临时开启数据上送(至冬笋云).
      operationId: enableGatewayDataUploadOnShort
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: duration
          in: query
          description: 时间长度(秒)
          required: true
          schema:
            type: integer
            default: 60
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.data_snapshot:
    post:
      tags:
        - gateways
      summary: 强制数据快照更新.
      operationId: fireGatewayDataSnapshot
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.data_flush:
    post:
      tags:
        - gateways
      summary: 强制上送缓存的数据（用以在周期上送期间，强制上传).
      operationId: flushGatewayData
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_log:
    post:
      tags:
        - gateways
      summary: 要求上送设备日志.
      operationId: enableGatewayLogUpload
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: duration
          in: query
          description: 时间长度(秒)
          required: true
          schema:
            type: integer
            default: 60
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_comm:
    post:
      tags:
        - gateways
      summary: 要求设备上送报文数据.
      operationId: enableGatewayCommUpload
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: duration
          in: query
          description: 时间长度(秒)
          required: true
          schema:
            type: integer
            default: 60
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_stat:
    post:
      tags:
        - gateways
      summary: 开始网关设备上送分析数据(端口收发字节数等等).
      operationId: enableGatewayStatUpload
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: enable
          in: query
          description: 启用或停用
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 0
              - 1
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.enable_event:
    post:
      tags:
        - gateways
      summary: 设定事件上送等级（最小）
      operationId: enableGatewayEventUpload
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: min_level
          in: query
          description: 最小上传等级 (负数禁止所有上传)
          required: true
          schema:
            type: integer
            default: 1
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.run_batch_script:
    post:
      tags:
        - gateways
      summary: 执行批量任务脚本(安装，删除，升级应用等等)
      operationId: gatewayRunBatchScript
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: script
          in: query
          description: 批量任务脚本
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.restart:
    post:
      tags:
        - gateways
      summary: 重启 FreeIOE (只重启软件)
      operationId: restartGatewayFreeIOE
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.reboot:
    post:
      tags:
        - gateways
      summary: 设备重启
      operationId: rebootGatewayHardware
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.cloud_conf:
    post:
      tags:
        - gateways
      summary: 修改云配置项
      operationId: updateCloudConfGateway
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: data
          in: query
          description: '配置数据 data example: {"ID": "IDIDIDIDIDID", "HOST": "ioe.symgrid.com", ...} Valid keys: ID/CLOUD_ID/HOST/PORT/TIMEOUT/PKG_HOST_URL/CNF_HOST_URL/DATA_UPLOAD/DATA_UPLOAD_PERIOD/COV/COV_TTL)'
          required: true
          schema:
            type: object
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.download_cfg:
    post:
      tags:
        - gateways
      summary: N/A
      operationId: downoadGatewayConfigurations
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: cfg_name
          in: query
          description: 配置唯一名称
          required: true
          schema:
            type: string
        - name: host
          in: query
          description: 配置服务器地址
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.upload_cfg:
    post:
      tags:
        - gateways
      summary: N/A
      operationId: uploadGatewayConfigurations
      parameters:
        - name: name
          in: query
          description: 网关 ID
          required: true
          schema:
            type: string
        - name: host
          in: query
          description: 配置服务器地址
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 指令 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.list:
    get:
      tags:
        - gateways
      summary: 获取网关已安装应用列表
      operationId: listGatewayApplication
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.refresh:
    post:
      tags:
        - gateways
      summary: 刷新网关应用列表
      operationId: refreshGatewayApplication
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: 操作ID（用以跟踪执行结果）
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.install:
    post:
      tags:
        - gateways
      summary: 安装应用
      operationId: installGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                inst:
                  type: string
                  description: 应用实例ID
                app:
                  type: string
                  description: 应用ID(应用市场)
                version:
                  type: integer
                  description: 应用版本
                conf:
                  type: object
                  description: 应用配置
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.remove:
    post:
      tags:
        - gateways
      summary: 删除应用
      operationId: removeGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                inst:
                  type: string
                  description: 应用实例ID
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.conf:
    post:
      tags:
        - gateways
      summary: 更新应用配置
      operationId: setGatewayApplicationConf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                inst:
                  type: string
                  description: 应用实例ID
                conf:
                  type: object
                  description: 应用配置
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.start:
    post:
      tags:
        - gateways
      summary: 启动应用
      operationId: startGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                int:
                  type: string
                  description: 应用实例ID
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.stop:
    post:
      tags:
        - gateways
      summary: 停止应用
      operationId: stopGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                inst:
                  type: string
                  description: 应用实例ID
                reason:
                  type: string
                  description: Stop reason
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.restart:
    post:
      tags:
        - gateways
      summary: Trigger application restart
      operationId: restartGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                inst:
                  type: string
                  description: 应用实例 ID
                reason:
                  type: string
                  description: Stop reason
                id:
                  type: string
                  description: 指令 ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.upgrade:
    post:
      tags:
        - gateways
      summary: 更新应用
      operationId: upgradeGatewayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                inst:
                  type: string
                  description: 应用实例ID
                app:
                  type: string
                  description: 应用ID(应用市场)
                version:
                  type: integer
                  description: 应用版本
                conf:
                  type: object
                  description: 应用配置
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.query_log:
    post:
      tags:
        - gateways
      summary: Query buffered application log and upload to cloud
      operationId: queryGatwayApplicationLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                inst:
                  type: string
                  description: 应用实例 ID
                id:
                  type: string
                  description: 指令 ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.query_comm:
    post:
      tags:
        - gateways
      summary: Query buffered application communication stream data and upload to cloud
      operationId: queryGatwayApplicationComm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                inst:
                  type: string
                  description: 应用实例 ID
                id:
                  type: string
                  description: 指令 ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.upload_comm:
    post:
      tags:
        - gateways
      summary: Upload application communication stream data to cloud
      operationId: uploadGatwayApplicationComm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                inst:
                  type: string
                  description: 应用实例 ID
                sec:
                  type: string
                  description: Duration in seconds
                id:
                  type: string
                  description: 指令 ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.option:
    post:
      tags:
        - gateways
      summary: Update application option/setings
      operationId: optionatwayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                inst:
                  type: string
                  description: 应用实例 ID
                option:
                  type: string
                  description: Option key. e.g 'auto'
                  default: auto
                value:
                  type: string
                  description: Option Value
                  default: 1
                id:
                  type: string
                  description: 指令 ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.applications.rename:
    post:
      tags:
        - gateways
      summary: Update application option/setings
      operationId: optionatwayApplication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                inst:
                  type: string
                  description: 应用实例 ID
                new_name:
                  type: string
                  description: 新应用实例 ID
                id:
                  type: string
                  description: 指令 ID for tracking result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.beta.read:
    get:
      tags:
        - gateways
      summary: 获取Beta模式
      operationId: getGatewayBetaInfo
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.beta.enable:
    post:
      tags:
        - gateways
      summary: 开启Beta模式
      operationId: enableBetaMode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                beta:
                  description: 开启或关闭Beta模式
                  required: true
                  type: integer
                  default: 1
                  enum:
                    - 0
                    - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.list:
    get:
      tags:
        - gateways
      summary: 获取网关采集设备列表
      operationId: listGatewayDevices
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.read:
    get:
      tags:
        - gateways
      summary: 获取网管采集设备详细信息
      operationId: listGatewayDevices
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: 设备ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.data:
    get:
      tags:
        - gateways
      summary: 获取网管采集设备中的输入项实时数据
      operationId: listGatewayDeviceInputs
      parameters:
        - name: gateway
          in: query
          description: 网关ID(序列号)
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: 设备ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.data_query:
    post:
      tags:
        - gateways
      summary: 查询设备数据（选择不上传设备数据时）
      operationId: dataQueryGatewayDevice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                name:
                  type: string
                  description: Device ID
                id:
                  type: string
                  description: 指令 ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.output:
    post:
      tags:
        - gateways
      summary: 设定设备输出项数据
      operationId: outputGatewayDeviceProp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                name:
                  type: string
                  description: 设备ID
                output:
                  type: string
                  description: 设备输出项名称
                prop:
                  type: string
                  description: 设备输出项属性名称
                value:
                  type: any
                  description: 输出数据
                id:
                  type: string
                  description: 指令ID（用以跟踪结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.devices.command:
    post:
      tags:
        - gateways
      summary: 发送设备指令
      operationId: commandGatewayDeviceProp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关ID(序列号)
                name:
                  type: string
                  description: 设备ID
                command:
                  type: string
                  description: 指令名称
                param:
                  type: any
                  description: 指令参数
                id:
                  type: string
                  description: 操作ID（用以跟踪执行结果）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.extensions.list:
    get:
      tags:
        - gateways
      summary: List all installed extension from gateway
      operationId: listGatewayInstalledExts
      parameters:
        - name: gateway
          in: query
          description: 网关 ID
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.extensions.refresh:
    post:
      tags:
        - gateways
      summary: Refresh all installed extension list
      operationId: listGatewayInstalledExts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                id:
                  type: string
                  description: 指令 ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /gateways.extensions.upgrade:
    post:
      tags:
        - gateways
      summary: Refresh all installed extension list
      operationId: listGatewayInstalledExts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway:
                  type: string                
                  description: 网关 ID ( serial number )
                extension:
                  type: string                
                  description: Extension ID
                version:
                  type: string                
                  description: Extension Version
                id:
                  type: string
                  description: 指令 ID for tracking the result
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.test:
    post:
      tags:
        - applications
      summary: Check whether the api is available or not
      operationId: apiApplicationTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /applications.list:
    get:
      tags:
        - applications
      summary: 获取用户应用列表
      operationId: listApplications
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.create:
    post:
      tags:
        - applications
      summary: 创建新应用
      operationId: createApplication
      requestBody:
        $ref: '#/components/requestBodies/ApplicationNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.icon:
    post:
      tags:
        - applications
      summary: 更新应用图标
      operationId: updateApplicationIcon
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: 图标文件
                name:
                  type: string
                  description: 应用ID(应用市场)
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.update:
    post:
      tags:
        - applications
      summary: 更新应用信息
      operationId: updateApplicationInfo
      requestBody:
        $ref: '#/components/requestBodies/Application'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.read:
    get:
      tags:
        - applications
      summary: 获取应用详细信息
      operationId: queryApplicationInfo
      parameters:
        - name: name
          in: query
          description: 应用ID（应用市场）
          required: true
          schema:
            type: string
            default: APP00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.remove:
    post:
      tags:
        - applications
      summary: 删除应用
      operationId: removeApplication
      parameters:
        - name: name
          in: query
          description: 应用ID（应用市场）
          required: true
          explode: true
          schema:
            type: string
            default: APP00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.test:
    post:
      tags:
        - applications
      summary: Check whether the api is available or not
      operationId: apiApplicationVersionTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /applications.versions.list:
    get:
      tags:
        - applications
      summary: 获取应用版本列表
      operationId: listApplicationVersions
      parameters:
        - name: app
          in: query
          description: 应用ID
          schema:
            type: string
            default: APP00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.create:
    post:
      tags:
        - applications
      summary: 创建新版本
      operationId: createApplicationVresion
      requestBody:
        $ref: '#/components/requestBodies/ApplicationVersionNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.read:
    get:
      tags:
        - applications
      summary: 查询版本信息
      operationId: queryApplicationVersionInfo
      parameters:
        - name: name
          in: query
          description: 应用版本ID
          required: true
          schema:
            type: string
            default: APP00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.remove:
    post:
      tags:
        - applications
      summary: 删除应用版本
      operationId: removeApplicationVersion
      parameters:
        - name: name
          in: query
          description: 应用版本ID
          required: true
          explode: true
          schema:
            type: string
            default: APP00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /applications.versions.latest:
    get:
      tags:
        - applications
      summary: 获取应用最新版本
      operationId: getApplicationVersionLatest
      parameters:
        - name: app
          in: query
          description: 应用ID
          required: true
          schema:
            type: string
            default: APP00000001
        - name: beta
          in: query
          description: 是否包含测试版
          required: true
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.test:
    post:
      tags:
        - configurations
      summary: Check whether the api is available or not
      operationId: apiConfigurationTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /configurations.list:
    get:
      tags:
        - configurations
      summary: 用户配置（模板）列表
      operationId: listConfiguration
      parameters:
        - name: conf_type
          in: query
          description: 配置（模板）类型
          required: false
          schema:
            type: string
            default: Template
            enum:
              - Template
              - Configuration
              - Other
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.create:
    post:
      tags:
        - configurations
      summary: 创建应用配置（模板）
      operationId: createConfiguration
      requestBody:
        $ref: '#/components/requestBodies/ConfigurationNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.update:
    post:
      tags:
        - configurations
      summary: 更新应用配置（模板）信息
      operationId: updateConfigurationINfo
      requestBody:
        $ref: '#/components/requestBodies/Configuration'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.read:
    get:
      tags:
        - configurations
      summary: 获取应用配置（模板）信息
      operationId: queryConfigurationInfo
      parameters:
        - name: name
          in: query
          description: 配置（模板）ID
          required: true
          schema:
            type: string
            default: CNF0000000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.remove:
    post:
      tags:
        - configurations
      summary: 删除应用配置（模板）
      operationId: removeConfiguration
      parameters:
        - name: name
          in: query
          description: 配置（模板）ID
          required: true
          explode: true
          schema:
            type: string
            default: CNF0000000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.test:
    post:
      tags:
        - applications
      summary: Check whether the api is available or not
      operationId: apiConfigurationVersionTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /configurations.versions.list:
    get:
      tags:
        - configurations
      summary: 获取应用配置（模板）版本列表
      operationId: listConfigurationVersions
      parameters:
        - name: conf
          in: query
          description: 应用配置（模板） ID
          schema:
            type: string
            default: CNF00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.create:
    post:
      tags:
        - configurations
      summary: 创建应用配置（模板）版本
      operationId: createApplicationVresion
      requestBody:
        $ref: '#/components/requestBodies/ConfigurationVersionNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.read:
    get:
      tags:
        - configurations
      summary: 获取应用配置（模板）版本信息
      operationId: queryConfigurationVersionInfo
      parameters:
        - name: name
          in: query
          description: 应用配置（模板）版本 ID
          required: true
          schema:
            type: string
            default: CNF00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.remove:
    post:
      tags:
        - configurations
      summary: 删除应用配置（模板）版本
      operationId: removeConfigurationVersion
      parameters:
        - name: name
          in: query
          description: 应用配置（模板）版本 ID
          required: true
          explode: true
          schema:
            type: string
            default: CNF00000001.3
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /configurations.versions.latest:
    get:
      tags:
        - configurations
      summary: 获取应用配置（模板）最新版本
      operationId: getConfigurationVersionLatest
      parameters:
        - name: app
          in: query
          description: 应用配置（模板） ID
          required: true
          schema:
            type: string
            default: CNF00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.test:
    post:
      tags:
        - companies
      summary: Check whether the api is available or not
      operationId: apiCompanyTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /companies.list:
    get:
      tags:
        - companies
      summary: 公司列表
      operationId: listCompany
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.create:
    post:
      tags:
        - companies
      summary: 创建公司
      operationId: createCompany
      requestBody:
        $ref: '#/components/requestBodies/CompanyNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.update:
    post:
      tags:
        - companies
      summary: 更新公司信息
      operationId: updateCompanyInfo
      requestBody:
        $ref: '#/components/requestBodies/Company'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.read:
    get:
      tags:
        - companies
      summary: 查询公司信息
      operationId: queryCompanyInfo
      parameters:
        - name: name
          in: query
          description: 公司ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /companies.remove:
    post:
      tags:
        - companies
      summary: 删除公司
      operationId: removeCompany
      parameters:
        - name: name
          in: query
          description: 公司ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.test:
    post:
      tags:
        - pushers
      summary: Check whether the api is available or not
      operationId: apiPusherTest
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
      parameters: []
  /pushers.list:
    get:
      tags:
        - pushers
      summary: 获取云发布列表
      operationId: listPusher
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.create:
    post:
      tags:
        - pushers
      summary: 创建新的云发布
      operationId: createPusher
      requestBody:
        $ref: '#/components/requestBodies/PusherNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.update:
    post:
      tags:
        - pushers
      summary: 更新云发布信息
      operationId: updatePusherInfo
      requestBody:
        $ref: '#/components/requestBodies/Pusher'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.read:
    get:
      tags:
        - pushers
      summary: 查询云发布
      operationId: queryPusherInfo
      parameters:
        - name: name
          in: query
          description: 云发布ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /pushers.remove:
    post:
      tags:
        - pushers
      summary: 删除云发布
      operationId: removePusher
      parameters:
        - name: name
          in: query
          description: 云发布ID
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.list:
    get:
      tags:
        - batch_tasks
      summary: 获取设备批量任务列表
      operationId: listBatchTasks
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.create:
    post:
      tags:
        - batch_tasks
      summary: 创建设备批量任务
      operationId: createBatchTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_name:
                  type: string                
                  description: 任务名称
                description:
                  type: string
                  description: 任务描述
                timeout:
                  type: integer
                  description: 执行超时时间
                script:
                  type: string
                  description: 任务脚本内容
                gateways:
                  type: array
                  description: 网关列表
                  items:
                    type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.read:
    get:
      tags:
        - batch_tasks
      summary: 获取设备批量任务详细信息
      operationId: getBatchTaskInfo
      parameters:
        - name: name
          in: query
          description: 设备批量任务ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /batch_tasks.status:
    post:
      tags:
        - batch_tasks
      summary: 获取设备批量任务状态
      operationId: getBatchTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 设备批量任务ID
                update:
                  type: boolean
                  description: 是否触发任务状态更新.
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.list:
    get:
      tags:
        - store
      summary: 获取应用列表
      operationId: getStoreApplicationList
      parameters:
        - name: owner
          in: query
          description: 应用所有者ID    
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.read:
    get:
      tags:
        - store
      summary: 获取应用详情
      operationId: getStoreApplicationInfo
      parameters:
        - name: name
          in: query
          description: 应用ID（应用市场）    
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.configurations.list:
    get:
      tags:
        - store
      summary: 获取配置（模板）列表
      operationId: listStoreConfiguration
      parameters:
        - name: app
          in: query
          description: 应用 ID
          required: false
          schema:
            type: string
            default: APP00000001
        - name: conf_type
          in: query
          description: 配置（模板）类型
          required: false
          schema:
            type: string
            default: Template
            enum:
              - Template
              - Configuration
              - Other
        - name: owner
          in: query
          description: 配置所有者
          required: false
          schema:
            type: string
            default: xxx@xx.com
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.configurations.read:
    get:
      tags:
        - store
      summary: 获取应用配置（模板）信息
      operationId: getStoreConfigurationInfo
      parameters:
        - name: name
          in: query
          description: 配置（模板） ID    
          required: true
          schema:
            type: string
            default: CNF00000001
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /store.{operation}.list:
    get:
      tags:
        - store
      summary: 获取应用讨论、评论、问题列表 
      operationId: listStoreOperationObjects
      parameters:
        - name: operation
          in: path
          description: 列表类型
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
        - name: app
          in: query
          description: 应用ID（应用市场）
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.create:
    post:
      tags:
        - store
      summary: 创建应用讨论、评论、问题
      operationId: createStoreOperationObject
      parameters:
        - name: operation
          in: path
          description: 类型
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                app:
                  type: string                
                  description: 应用ID（应用市场）
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.read:
    get:
      tags:
        - store
      summary: 获取应用讨论、评论、问题详情
      operationId: getStoreOperationObjectInformation
      parameters:
        - name: operation
          in: path
          description: 类型
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
        - name: name
          in: query
          description: 对象类型
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.update:
    post:
      tags:
        - store
      summary: 更新应用讨论、评论、问题
      operationId: updateStoreOperationObjectInformation
      parameters:
        - name: operation
          in: path
          description: 类型
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string                
                  description: 对象ID
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /store.{operation}.remove:
    post:
      tags:
        - store
      summary: 删除应用讨论、评论、问题
      operationId: removeStoreOperationObject
      parameters:
        - name: operation
          in: path
          description: 类型
          required: true
          schema:
            type: string
            enum:
              - comments
              - issues
              - reviews
        - name: name
          in: query
          description: 对象ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
        '501':
          description: Error enums
          content:
            application/json:
              schema:
                type: string
                enum: 
                  - exception
  /developers.list:
    get:
      tags:
        - developers
      summary: 获取开发者列表
      operationId: listDeveloper
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /developers.create:
    post:
      tags:
        - developers
      summary: 创建开发者
      operationId: createDeveloper
      requestBody:
        $ref: '#/components/requestBodies/AppDeveloperNew'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /developers.update:
    post:
      tags:
        - developers
      summary: 更新开发者信息
      operationId: updateDeveloperInfo
      requestBody:
        $ref: '#/components/requestBodies/AppDeveloper'
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
  /developers.read:
    get:
      tags:
        - developers
      summary: 查询开发者信息
      operationId: queryDeveloperInfo
      parameters:
        - name: name
          in: query
          description: 开发者 ID （默认为当前用户）
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ApiResponse'
        default:
          $ref: '#/components/responses/ApiExceptionResponse'
externalDocs:
  description: See ThingsRoot API example
  url: 'https://thingsroot.com/api/example.html'
components:
  schemas:
    ApiResponseOK:
      type: object
      properties:
        ok:
          type: boolean
        info:
          type: string
        data:
          type: any
    ApiResponseOK_Warning:
      type: object
      properties:
        ok:
          type: boolean
        warning:
          type: string
        data:
          type: any
    ApiResponseOK_Warnings:
      type: object
      properties:
        ok:
          type: boolean
        error:
          type: string
        warning:
          type: array
          items:
              type: string
        data:
          type: object
    ApiResponseOK_Error:
      type: object
      properties:
        ok:
          type: boolean
        error:
          type: string
        exception:
          type: string
    ApiResponse:
      oneOf:
        - $ref: '#/components/schemas/ApiResponseOK'
        - $ref: '#/components/schemas/ApiResponseOK_Warning'
        - $ref: '#/components/schemas/ApiResponseOK_Warnings'
        - $ref: '#/components/schemas/ApiResponseOK_Error'
    ApiTestResponse:
      type: object
      properties:
        ok:
          type: boolean
        data:
          type: string
        source:
          type: string
    ApiExceptionResponse:
      type: object
      properties:
        exc:
          type: string
    CompanyNew:
      type: object
      properties:
        comp_name:
          type: string
          description: 公司简称
        full_name:
          type: string
          description: 公司全称
        domain:
          type: domain
          description: 公司域名
        admin:
          type: email
          description: 管理员用户名
        address:
          type: string
          description: 地址信息
        contact:
          type: string
          description: 联系人信息
    Company:
      type: object
      properties:
        name:
          type: string
          description: 公司ID,同公司短名称
        comp_name:
          type: string
          description: 公司简称
        full_name:
          type: string
          description: 公司全称
        domain:
          type: domain
          description: 公司域名
        admin:
          type: email
          description: 管理员用户名
        address:
          type: string
          description: 地址信息
        contact:
          type: string
          description: 联系人信息
    GatewayNew:
      type: object
      properties:
        device_name:
          type: string
          description: 网关设备名称.
        description:
          type: string
          description: 网关设备描述.
        owner_type:
          type: string
          description: 所有者类型
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: 所有者ID
    Gateway:
      type: object
      properties:
        name:
          type: string
          description: 网关ID (序列号)
        sn:
          type: string
          description: 网关ID (序列号)
        dev_name:
          type: string
          description: 网关设备名称.
        description:
          type: string
          description: 网关设备描述.
        enabled:
          type: integer
          description: 是否启用
          enum:
            - 0
            - 1
        company:
          type: string
          description: 网关设备所属公司名称
        owner_type:
          type: string
          description: 网关设备所有者类型
          enum:
            - User
            - Cloud Company Group
        owner_id:
          type: string
          description: 网关设备所有者ID
        longitude:
          type: string
        latitude:
          type: string
        device_status:
          type: string
          description: 网关设备在线状态
          enum:
            - ONLINE
            - OFFLINE
        last_updated:
          type: string
          format: date-time
          description: 上一次更新设备信息的时间
        use_beta:
          type: integer
          description: 设备是否可以启用Beta模式
        use_beta_start_time:
          type: string
          format: date-time
          description: 设备开启Beta模式的时间
    UserSignup:
      type: object
      properties:
        email:
          type: email
          description: 用户ID(邮箱)
        full_name:
          type: string
          description: 用户全名
    User:
      type: object
      properties:
        name:
          type: string
          description: 用户名
        csrf_token:
          type: string
          description: CSRF Token
        groups:
          type: array
          description: 所属公司员工组列表
        companies:
          type: array
          description: 所属公司列表
        email:
          type: string
          format: email
          description: 邮件地址
        password:
          type: string
          description: 密码
        phone:
          type: string
          description: 电话
        first_name:
          type: string
          description: 名字
        last_name:
          type: string
          description: 姓氏
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 标签ID
        name:
          type: string
          description: 标签名称
      xml:
        name: Tag
    ApplicationNew:
      type: object
      properties:
        app_name:
          type: string
          description: 应用名称
        code_name:
          type: string
          description: 应用代码名称(英文字母，不包含特殊字符)
        has_conf_template:
          type: integer
          description: 应用是否有配置模板
          enum:
            - 0
            - 1
        license_type:
          type: string
          description: 授权类型
          enum:
            - Open
            - Private
            - Close
        star:
          type: integer
          description: 应用评星
        description:
          type: string
          description: 应用描述(Markdown)
        conf_template:
          type: string
          description: 应用配置模板说明(JSON)
        pre_configuration:
          type: string
          description: 应用默认配置
        keywords:
          type: array
          description: 应用标签
          items:
            type: string
    Application:
      type: object
      properties:
        name:
          type: string
          description: 应用ID（应用市场）
        app_name:
          type: string
          description: 应用名称
        code_name:
          type: string
          description: 应用代码名称(英文字母，不包含特殊字符)
        published:
          type: integer
          description: 是否是否出现在应用市场上
          enum:
            - 0
            - 1
        has_conf_template:
          type: integer
          description: 应用是否有配置模板
          enum:
            - 0
            - 1
        license_type:
          type: string
          description: 授权类型
          enum:
            - Open
            - Private
            - Close
        star:
          type: integer
          description: 应用评星
        fork_from:
          type: string
          description: Fork 应用ID（应用市场）
        fork_version:
          type: integer
          description: Fork 版本
        description:
          type: string
          description: 应用描述(Markdown)
        conf_template:
          type: string
          description: 应用配置模板说明(JSON)
        pre_configuration:
          type: string
          description: 应用默认配置
        icon_image:
          type: string
          description: 应用图标地址
        keywords:
          type: array
          description: 应用标签
          items:
            type: string
        owner:
          type: string
          description: 所有者ID
    ApplicationVersionNew:
      type: object
      properties:
        app:
          type: string
          description: 应用 ID.
        version:
          type: integer
          description: 版本号
        comment:
          type: string
          description: 版本说明
        app_file:
          type: string
          description: 应用版本文件(zip包)
    ApplicationVersion:
      type: object
      properties:
        name:
          type: string
          description: 应用版本ID
        app:
          type: string
          description: 应用 ID
        version:
          type: integer
          description: 版本号
        comment:
          type: string
          description: 版本说明
        app_name:
          type: string
          description: 应用名
        beta:
          type: integer
          description: 是否是beta版本
          enum:
            - 0
            - 1
    ConfigurationNew:
      type: object
      properties:
        app:
          type: string
          description: 应用ID（应用市场）.
        conf_name:
          type: string
          description: 配置（模板）名称
        description:
          type: string
          description: 配置（模板）描述
        type:
          type: string
          description: 配置（模板）类型
          enum:
            - Template
            - Configuration
            - Other
        public:
          type: integer
          enum:
            - 0
            - 1
        keywords:
          type: array
          description: 标签
          items:
            type: string
        owner_type:
          type: string
          description: 所有者类型
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: 所有者ID
    Configuration:
      type: object
      properties:
        name:
          type: string
          description: 配置（模板）ID
        app:
          type: string
          description: 应用ID（应用市场）.
        conf_name:
          type: string
          description: 配置（模板）名称
        description:
          type: string
          description: 配置（模板）描述
        type:
          type: string
          description: 配置（模板）类型
          enum:
            - Template
            - Configuration
            - Other
        public:
          type: integer
          enum:
            - 0
            - 1
        keywords:
          type: array
          description: 标签
          items:
            type: string
        owner_type:
          type: string
          description: 所有者类型
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: 所有者ID
        owner_company:
          type: string
          description: 所属公司ID
    ConfigurationVersionNew:
      type: object
      properties:
        conf:
          type: string
          description: 配置（模板） ID.
        version:
          type: integer
          description: 版本号
        comment:
          type: string
          description: 版本说明
        data:
          type: string
          description: 配置（模板） 版本数据内容
    ConfigurationVersion:
      type: object
      properties:
        name:
          type: string
          description: 配置（模板） 版本 ID.
        conf:
          type: string
          description: 配置（模板） ID.
        version:
          type: integer
          description: 版本号
        comment:
          type: string
          description: 版本说明
        app_name:
          type: string
          description: 应用名
        app_conf_name:
          type: string
          description: 应用配置（模板）名称
        data:
          type: string
          description: 应用配置（模板）版本数据内容
    Activity:
      type: object
      properties:
        name:
          type: string
          description: 事件ID
        subject:
          type: string
          description: 事件标题.
        operation:
          type: string
          description: 事件类型
          enum:
            - Owner
            - Status
            - Action
        status:
          type: string
          description: 事件结果（非执行结果）
          enum:
            - Success
            - Failed
        message:
          type: string
          description: 事件详细信息（JSON对象）
          items:
            type: string
        disposed:
          type: integer
          description: 事件是否已处理
          enum:
            - 0
            - 1
        disposed_by:
          type: string
          description: 处理者用户ID
        device:
          type: string
          description: 网关设备ID(序列号)
        user:
          type: string
          description: 事件触发者用户ID
        full_name:
          type: string
          description: 事件触发者用户全称
        owner_type:
          type: string
          description: 所有者类型
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: 所有者ID
        owner_company:
          type: string
          description: 所属公司ID
        creation:
          type: date-time
          description: 事件发生时间
    Event:
      type: object
      properties:
        name:
          type: string
          description: 设备事件ID
        device:
          type: string
          description: 网关设备ID(序列号)
        event_source:
          type: string
          description: 设备事件来源的设备ID
        event_level:
          type: integer
          description: 设备事件等级
        event_type:
          type: string
          description: 设备事件类型
          enum:
            - SYS
            - DEV
            - COMM
            - DATA
            - APP
        event_info:
          type: string
          description: 设备事件信息
          items:
            type: string
        event_data:
          type: string
          description: 设备事件信息数据对象
        event_time:
          type: date-time
          description: 设备事件时间戳
        disposed:
          type: integer
          description: 事件是否已处理
          enum:
            - 0
            - 1
        disposed_by:
          type: string
          description: 处理者用户ID
        owner_type:
          type: string
          description: 所有者类型
          enum:
            - User
            - Cloud Company Group
          default: User
        owner_id:
          type: string
          description: 所有者ID
        owner_company:
          type: string
          description: 所属公司ID
    PusherNew:
      type: object
      properties:
        app_name:
          type: string
          description: 云发布名称
        description:
          type: string
          description: 云发布描述
        uri:
          type: string
          description: 处理云发布中的HTTP请求服务器地址
        enabled:
          type: integer
          description: 是否启用
          enum:
            - 0
            - 1
        on_behalf:
          type: string
          description: 代理用户
        device:
          type: integer
          description: 是否发布设备信息，以及更新
          enum:
            - 0
            - 1
        device_event:
          type: integer
          description: 是否发布设备事件
          enum:
            - 0
            - 1
        device_data:
          type: integer
          description: 是否通过MQTT协议发布设备数据
          enum:
            - 0
            - 1
        device_data_mqtt_host:
          type: string
          description: 处理设备数据的MQTT Broker地址
        device_data_mqtt_user:
          type: string
          description: 处理设备数据的MQTT Broker用户名
        device_data_mqtt_passwd:
          type: string
          description: 处理设备数据的MQTT Broker密码
    Pusher:
      type: object
      properties:
        name:
          type: string
          description: 云发布ID
        app_name:
          type: string
          description: 云发布名称
        description:
          type: string
          description: 云发布描述
        uri:
          type: string
          description: 处理云发布中的HTTP请求服务器地址
        enabled:
          type: integer
          description: 是否启用
          enum:
            - 0
            - 1
        on_behalf:
          type: string
          description: 代理用户
        device:
          type: integer
          description: 是否发布设备信息，以及更新
          enum:
            - 0
            - 1
        device_event:
          type: integer
          description: 是否发布设备事件
          enum:
            - 0
            - 1
        device_data:
          type: integer
          description: 是否通过MQTT协议发布设备数据
          enum:
            - 0
            - 1
        device_data_mqtt_host:
          type: string
          description: 处理设备数据的MQTT Broker地址
        device_data_mqtt_user:
          type: string
          description: 处理设备数据的MQTT Broker用户名
        device_data_mqtt_passwd:
          type: string
          description: 处理设备数据的MQTT Broker密码
    Batch_Task_New:
      type: object
      properties:
        task_name:
          type: string
          description: 批量任务名称
        timeout:
          type: integer
          description: 批量任务超时时间（seconds）
        task_description:
          type: string
          description: 批量任务描述
        batch_script:
          type: string
          description: 批量任务脚本内容
        device_list:
          type: array
          items:
            $ref: '#/components/schemas/Batch_Task_Device'
    Batch_Task:
      type: object
      properties:
        name:
          type: string
          description: 设备批量任务ID
        task_name:
          type: string
          description: 批量任务名称
        timeout:
          type: integer
          description: 批量任务超时时间（seconds）
        owner_id:
          type: string
          description: 批量任务所有者ID
        status:
          type: string
          description: 任务状态
          enum:
            - New
            - Running
            - Finished
            - Error
            - Partial
        task_description:
          type: string
          description: 批量任务描述
        batch_script:
          type: string
          description: 批量任务脚本内容
        device_list:
          type: array
          items:
            $ref: '#/components/schemas/Batch_Task_Device'
        creation:
          type: date-time
          description: 任务创建时间
    Batch_Task_Device:
      type: object
      properties:
        device:
          type: string
          description: 批量任务设备ID.
        status:
          type: string
          description: 任务状态
          enum:
            - New
            - Running
            - Finished
            - Error
            - Partial
        info:
          type: string
          description: 任务执行结果信息
        action_id:
          type: string
          description: 任务执行跟踪ID
        action_starttime:
          type: date-time
          description: 任务开始执行时间
    StoreAppCommentNew:
      type: object
      properties:
        app:
          type: string
          description: 应用ID（应用市场）.
        comment:
          type: string
          description: 评论内容
        reply_to:
          type: string
          description: 评论回复ID
        creation:
          type: date-time
          description: 评论创建时间
    StoreAppComment:
      type: object
      properties:
        name:
          type: string
          description: 评论ID
        app:
          type: string
          description: 应用ID（应用市场）.
        comment:
          type: string
          description: 评论内容
        reply_to:
          type: string
          description: 评论回复ID
        creation:
          type: date-time
          description: 评论创建时间
    StoreAppReviewNew:
      type: object
      properties:
        app:
          type: string
          description: 应用ID（应用市场）.
        title:
          type: string
          description: 应用评价标题
        star:
          type: integer
          description: 评星
        content:
          type: string
          description: 应用评价内容
        comments:
          type: array
          description: 应用评价评论列表
    StoreAppReview:
      type: object
      properties:
        name:
          type: string
          description: 应用评价ID
        app:
          type: string
          description: 应用ID（应用市场）.
        title:
          type: string
          description: 应用评价标题
        star:
          type: integer
          description: 评星
        content:
          type: string
          description: 应用评价内容
        comments:
          type: array
          description: 应用评价评论列表
        creation:
          type: date-time
          description: 应用评价评论创建时间
    StoreAppIssueNew:
      type: object
      properties:
        app:
          type: string
          description: 应用ID（应用市场）.
        title:
          type: string
          description: 问题标题
        priority:
          type: string
          description: 问题等级
          enum:
            - Low
            - Middle
            - High
        content:
          type: string
          description: 问题描述内容
    StoreAppIssue:
      type: object
      properties:
        name:
          type: string
          description: 应用问题ID
        app:
          type: string
          description: 应用ID（应用市场）.
        title:
          type: string
          description: 问题标题
        status:
          type: string
          description: 问题状态
          enum:
            - Open
            - Closed
            - Invalid
        priority:
          type: string
          description: 问题等级
          enum:
            - Low
            - Middle
            - High
        content:
          type: string
          description: 问题描述内容
        comments:
          type: array
          description: 问题评论列表
        creation:
          type: date-time
          description: 问题创建时间
    AppDeveloperNew:
      type: object
      properties:
        nickname:
          type: string
          description: 开发者短名称.
        group:
          type: string
          description: 开发权限组.
          enum:
            - Normal
            - Power
            - Admin
        enabled:
          type: integer
          description: Enable flag.
          default: 1
          enum:
            - 0
            - 1
    AppDeveloper:
      type: object
      properties:
        name:
          type: string
          description: 开发者用户ID.
        user:
          type: string
          description: 开发者用户ID.
        nickname:
          type: string
          description: 开发者短名称.
        group:
          type: string
          description: 开发权限组.
          enum:
            - Normal
            - Power
            - Admin
        enabled:
          type: integer
          description: Enable flag.
          default: 1
          enum:
            - 0
            - 1
  requestBodies:
    UserSignup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSignup'
      description: New user information object
      required: true
    GatewayNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayNew'
      description: New gateway infomation object
      required: true
    Gateway:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Gateway'
      description: Gateway infomation object
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    ApplicationNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationNew'
    Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    ApplicationVersionNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationVersionNew'
    ApplicationVersion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationVersion'
    ConfigurationNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationNew'
    Configuration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Configuration'
    ConfigurationVersionNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationVersionNew'
    ConfigurationVersion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationVersion'
    CompanyNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyNew'
    Company:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Company'
    PusherNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PusherNew'
    Pusher:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pusher'
    AppDeveloperNew:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppDeveloperNew'
    AppDeveloper:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppDeveloper'
  responses:
    ApiResponse:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    ApiTestResponse:
      description: successful operation from test apis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiTestResponse'
    ApiExceptionResponse:
      description: operation exception result repsonse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiExceptionResponse'
  securitySchemes:
    auth_code:
      type: apiKey
      name: AuthorizationCode
      in: header
  links: {}
  callbacks: {}
security:
  - auth_code: []
